
led_multiplekser.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000009b0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000009b0  00000a44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000017  0080006a  0080006a  00000a4e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a4e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000aaa  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000499  00000000  00000000  00000b02  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000223  00000000  00000000  00000f9b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000022f  00000000  00000000  000011be  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000012c  00000000  00000000  000013f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000029c  00000000  00000000  0000151c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000545  00000000  00000000  000017b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00001cfd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_9>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	cf 00       	.word	0x00cf	; ????
  56:	e3 00       	.word	0x00e3	; ????
  58:	d1 00       	.word	0x00d1	; ????
  5a:	d3 00       	.word	0x00d3	; ????
  5c:	d5 00       	.word	0x00d5	; ????
  5e:	d7 00       	.word	0x00d7	; ????
  60:	d9 00       	.word	0x00d9	; ????
  62:	db 00       	.word	0x00db	; ????
  64:	dd 00       	.word	0x00dd	; ????
  66:	df 00       	.word	0x00df	; ????

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf e5       	ldi	r28, 0x5F	; 95
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	10 e0       	ldi	r17, 0x00	; 0
  76:	a0 e6       	ldi	r26, 0x60	; 96
  78:	b0 e0       	ldi	r27, 0x00	; 0
  7a:	e0 eb       	ldi	r30, 0xB0	; 176
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 36       	cpi	r26, 0x6A	; 106
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	20 e0       	ldi	r18, 0x00	; 0
  8c:	aa e6       	ldi	r26, 0x6A	; 106
  8e:	b0 e0       	ldi	r27, 0x00	; 0
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a1 38       	cpi	r26, 0x81	; 129
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 8d 01 	call	0x31a	; 0x31a <main>
  9e:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_9>:

#include <avr/io.h>
#include <avr/interrupt.h>

ISR(TIMER0_OVF_vect)
{
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	2f 93       	push	r18
  b2:	3f 93       	push	r19
  b4:	4f 93       	push	r20
  b6:	5f 93       	push	r21
  b8:	6f 93       	push	r22
  ba:	7f 93       	push	r23
  bc:	8f 93       	push	r24
  be:	9f 93       	push	r25
  c0:	af 93       	push	r26
  c2:	bf 93       	push	r27
  c4:	ef 93       	push	r30
  c6:	ff 93       	push	r31
	static volatile int src_nr = 0, licznik = 0;
	
	if(licznik++ == 10)
  c8:	80 91 6e 00 	lds	r24, 0x006E
  cc:	90 91 6f 00 	lds	r25, 0x006F
  d0:	9c 01       	movw	r18, r24
  d2:	2f 5f       	subi	r18, 0xFF	; 255
  d4:	3f 4f       	sbci	r19, 0xFF	; 255
  d6:	30 93 6f 00 	sts	0x006F, r19
  da:	20 93 6e 00 	sts	0x006E, r18
  de:	0a 97       	sbiw	r24, 0x0a	; 10
  e0:	89 f5       	brne	.+98     	; 0x144 <__vector_9+0x9e>
	{
		src_nr = (src_nr + 1) % total_displays;
  e2:	80 91 6c 00 	lds	r24, 0x006C
  e6:	90 91 6d 00 	lds	r25, 0x006D
  ea:	01 96       	adiw	r24, 0x01	; 1
  ec:	60 91 7e 00 	lds	r22, 0x007E
  f0:	70 e0       	ldi	r23, 0x00	; 0
  f2:	0e 94 d7 01 	call	0x3ae	; 0x3ae <__divmodhi4>
  f6:	90 93 6d 00 	sts	0x006D, r25
  fa:	80 93 6c 00 	sts	0x006C, r24
		
		*display_port = ~(1 << src_nr);
  fe:	e0 91 70 00 	lds	r30, 0x0070
 102:	f0 91 71 00 	lds	r31, 0x0071
 106:	80 91 6c 00 	lds	r24, 0x006C
 10a:	90 91 6d 00 	lds	r25, 0x006D
 10e:	21 e0       	ldi	r18, 0x01	; 1
 110:	30 e0       	ldi	r19, 0x00	; 0
 112:	a9 01       	movw	r20, r18
 114:	02 c0       	rjmp	.+4      	; 0x11a <__vector_9+0x74>
 116:	44 0f       	add	r20, r20
 118:	55 1f       	adc	r21, r21
 11a:	8a 95       	dec	r24
 11c:	e2 f7       	brpl	.-8      	; 0x116 <__vector_9+0x70>
 11e:	ca 01       	movw	r24, r20
 120:	80 95       	com	r24
 122:	80 83       	st	Z, r24
		*digit_port = number[src_nr];
 124:	e0 91 7a 00 	lds	r30, 0x007A
 128:	f0 91 7b 00 	lds	r31, 0x007B
 12c:	a0 91 6c 00 	lds	r26, 0x006C
 130:	b0 91 6d 00 	lds	r27, 0x006D
 134:	ae 58       	subi	r26, 0x8E	; 142
 136:	bf 4f       	sbci	r27, 0xFF	; 255
 138:	8c 91       	ld	r24, X
 13a:	80 83       	st	Z, r24
	
		licznik = 0;
 13c:	10 92 6f 00 	sts	0x006F, r1
 140:	10 92 6e 00 	sts	0x006E, r1
	}
	
	asm volatile ("nop");
 144:	00 00       	nop
}
 146:	ff 91       	pop	r31
 148:	ef 91       	pop	r30
 14a:	bf 91       	pop	r27
 14c:	af 91       	pop	r26
 14e:	9f 91       	pop	r25
 150:	8f 91       	pop	r24
 152:	7f 91       	pop	r23
 154:	6f 91       	pop	r22
 156:	5f 91       	pop	r21
 158:	4f 91       	pop	r20
 15a:	3f 91       	pop	r19
 15c:	2f 91       	pop	r18
 15e:	0f 90       	pop	r0
 160:	0f be       	out	0x3f, r0	; 63
 162:	0f 90       	pop	r0
 164:	1f 90       	pop	r1
 166:	18 95       	reti

00000168 <clearDisplay>:

void clearDisplay()
{
	int i;
	
	for(i = 0; i < total_displays; i++)
 168:	20 91 7e 00 	lds	r18, 0x007E
 16c:	30 e0       	ldi	r19, 0x00	; 0
 16e:	12 16       	cp	r1, r18
 170:	13 06       	cpc	r1, r19
 172:	54 f4       	brge	.+20     	; 0x188 <clearDisplay+0x20>
 174:	80 e0       	ldi	r24, 0x00	; 0
 176:	90 e0       	ldi	r25, 0x00	; 0
		number[i] = 0;
 178:	fc 01       	movw	r30, r24
 17a:	ee 58       	subi	r30, 0x8E	; 142
 17c:	ff 4f       	sbci	r31, 0xFF	; 255
 17e:	10 82       	st	Z, r1

void clearDisplay()
{
	int i;
	
	for(i = 0; i < total_displays; i++)
 180:	01 96       	adiw	r24, 0x01	; 1
 182:	82 17       	cp	r24, r18
 184:	93 07       	cpc	r25, r19
 186:	c4 f3       	brlt	.-16     	; 0x178 <clearDisplay+0x10>
 188:	08 95       	ret

0000018a <convertChar>:

uint8_t convertChar(char s)
{
	uint8_t result = 0;
	
	switch(s)
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	fc 01       	movw	r30, r24
 18e:	f0 97       	sbiw	r30, 0x30	; 48
 190:	ea 30       	cpi	r30, 0x0A	; 10
 192:	f1 05       	cpc	r31, r1
 194:	b0 f4       	brcc	.+44     	; 0x1c2 <convertChar+0x38>
 196:	e6 5d       	subi	r30, 0xD6	; 214
 198:	ff 4f       	sbci	r31, 0xFF	; 255
 19a:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__tablejump2__>
	{
		case '0':
			result = 0b00111111;
 19e:	8f e3       	ldi	r24, 0x3F	; 63
 1a0:	08 95       	ret
		case '1':
			result = 0b00000110;
			break;
		
		case '2':
			result = 0b01011011;
 1a2:	8b e5       	ldi	r24, 0x5B	; 91
			break;
 1a4:	08 95       	ret
		
		case '3':
			result = 0b01001111;
 1a6:	8f e4       	ldi	r24, 0x4F	; 79
			break;
 1a8:	08 95       	ret
		
		case '4':
			result = 0b01100110;
 1aa:	86 e6       	ldi	r24, 0x66	; 102
			break;
 1ac:	08 95       	ret
		
		case '5':
			result = 0b01101101;
 1ae:	8d e6       	ldi	r24, 0x6D	; 109
			break;
 1b0:	08 95       	ret
		
		case '6':
			result = 0b01111101;
 1b2:	8d e7       	ldi	r24, 0x7D	; 125
			break;
 1b4:	08 95       	ret
		
		case '7':
			result = 0b00000111;
 1b6:	87 e0       	ldi	r24, 0x07	; 7
			break;
 1b8:	08 95       	ret
		
		case '8':
			result = 0b01111111;
 1ba:	8f e7       	ldi	r24, 0x7F	; 127
			break;
 1bc:	08 95       	ret
		
		case '9':
			result = 0b01101111;
 1be:	8f e6       	ldi	r24, 0x6F	; 111
			break;
 1c0:	08 95       	ret
			
		default: // null
			result = 0;
 1c2:	80 e0       	ldi	r24, 0x00	; 0
			break;
 1c4:	08 95       	ret
		case '0':
			result = 0b00111111;
			break;
		
		case '1':
			result = 0b00000110;
 1c6:	86 e0       	ldi	r24, 0x06	; 6
			result = 0;
			break;
	}
	
	return result;
}
 1c8:	08 95       	ret

000001ca <LEDSetValue>:
	
	set_timer0();
}

void LEDSetValue(char *val)
{
 1ca:	cf 92       	push	r12
 1cc:	df 92       	push	r13
 1ce:	ef 92       	push	r14
 1d0:	ff 92       	push	r15
 1d2:	0f 93       	push	r16
 1d4:	1f 93       	push	r17
 1d6:	cf 93       	push	r28
 1d8:	df 93       	push	r29
	int i;
	
	for(i = 0; i < total_displays; i++)
 1da:	c0 90 7e 00 	lds	r12, 0x007E
 1de:	d1 2c       	mov	r13, r1
 1e0:	1c 14       	cp	r1, r12
 1e2:	1d 04       	cpc	r1, r13
 1e4:	b4 f4       	brge	.+44     	; 0x212 <LEDSetValue+0x48>
 1e6:	08 2f       	mov	r16, r24
 1e8:	19 2f       	mov	r17, r25
 1ea:	c0 e0       	ldi	r28, 0x00	; 0
 1ec:	d0 e0       	ldi	r29, 0x00	; 0
 1ee:	78 01       	movw	r14, r16
	{
		number[i] = convertChar(val[i]);
 1f0:	f8 01       	movw	r30, r16
 1f2:	81 91       	ld	r24, Z+
 1f4:	8f 01       	movw	r16, r30
 1f6:	0e 94 c5 00 	call	0x18a	; 0x18a <convertChar>
 1fa:	fe 01       	movw	r30, r28
 1fc:	ee 58       	subi	r30, 0x8E	; 142
 1fe:	ff 4f       	sbci	r31, 0xFF	; 255
 200:	80 83       	st	Z, r24
		
		if(val[i] == '\0')
 202:	f7 01       	movw	r30, r14
 204:	80 81       	ld	r24, Z
 206:	88 23       	and	r24, r24
 208:	21 f0       	breq	.+8      	; 0x212 <LEDSetValue+0x48>

void LEDSetValue(char *val)
{
	int i;
	
	for(i = 0; i < total_displays; i++)
 20a:	21 96       	adiw	r28, 0x01	; 1
 20c:	cc 15       	cp	r28, r12
 20e:	dd 05       	cpc	r29, r13
 210:	74 f3       	brlt	.-36     	; 0x1ee <LEDSetValue+0x24>
		number[i] = convertChar(val[i]);
		
		if(val[i] == '\0')
			break;
	}
}
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	1f 91       	pop	r17
 218:	0f 91       	pop	r16
 21a:	ff 90       	pop	r15
 21c:	ef 90       	pop	r14
 21e:	df 90       	pop	r13
 220:	cf 90       	pop	r12
 222:	08 95       	ret

00000224 <LEDSetNumber>:

void LEDSetNumber(int nr)
{
 224:	0f 93       	push	r16
 226:	1f 93       	push	r17
 228:	cf 93       	push	r28
 22a:	df 93       	push	r29
 22c:	cd b7       	in	r28, 0x3d	; 61
 22e:	de b7       	in	r29, 0x3e	; 62
 230:	29 97       	sbiw	r28, 0x09	; 9
 232:	0f b6       	in	r0, 0x3f	; 63
 234:	f8 94       	cli
 236:	de bf       	out	0x3e, r29	; 62
 238:	0f be       	out	0x3f, r0	; 63
 23a:	cd bf       	out	0x3d, r28	; 61
	char s[MAX_NUM_DISPLAY + 1]; // +1 end char
	sprintf(s, "%d\0", nr);
 23c:	9f 93       	push	r25
 23e:	8f 93       	push	r24
 240:	80 e6       	ldi	r24, 0x60	; 96
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	9f 93       	push	r25
 246:	8f 93       	push	r24
 248:	8e 01       	movw	r16, r28
 24a:	0f 5f       	subi	r16, 0xFF	; 255
 24c:	1f 4f       	sbci	r17, 0xFF	; 255
 24e:	1f 93       	push	r17
 250:	0f 93       	push	r16
 252:	0e 94 05 02 	call	0x40a	; 0x40a <sprintf>
	LEDSetValue(s);
 256:	c8 01       	movw	r24, r16
 258:	0e 94 e5 00 	call	0x1ca	; 0x1ca <LEDSetValue>
 25c:	0f 90       	pop	r0
 25e:	0f 90       	pop	r0
 260:	0f 90       	pop	r0
 262:	0f 90       	pop	r0
 264:	0f 90       	pop	r0
 266:	0f 90       	pop	r0
}
 268:	29 96       	adiw	r28, 0x09	; 9
 26a:	0f b6       	in	r0, 0x3f	; 63
 26c:	f8 94       	cli
 26e:	de bf       	out	0x3e, r29	; 62
 270:	0f be       	out	0x3f, r0	; 63
 272:	cd bf       	out	0x3d, r28	; 61
 274:	df 91       	pop	r29
 276:	cf 91       	pop	r28
 278:	1f 91       	pop	r17
 27a:	0f 91       	pop	r16
 27c:	08 95       	ret

0000027e <set_timer0>:
	return result;
}

void set_timer0()
{
	TCCR0 = 1 << CS01;
 27e:	82 e0       	ldi	r24, 0x02	; 2
 280:	83 bf       	out	0x33, r24	; 51
	TIMSK |= 1 << TOIE0;
 282:	89 b7       	in	r24, 0x39	; 57
 284:	81 60       	ori	r24, 0x01	; 1
 286:	89 bf       	out	0x39, r24	; 57
 288:	08 95       	ret

0000028a <LEDInit>:
	
	asm volatile ("nop");
}

void LEDInit(uint8_t total, volatile uint8_t *digit_ddr_wsk, volatile uint8_t *digit_port_wsk, volatile uint8_t *display_ddr_wsk, volatile uint8_t *display_port_wsk)
{
 28a:	0f 93       	push	r16
 28c:	1f 93       	push	r17
	total_displays = total;
 28e:	80 93 7e 00 	sts	0x007E, r24
	digit_ddr = digit_ddr_wsk;
 292:	70 93 80 00 	sts	0x0080, r23
 296:	60 93 7f 00 	sts	0x007F, r22
	digit_port = digit_port_wsk;
 29a:	50 93 7b 00 	sts	0x007B, r21
 29e:	40 93 7a 00 	sts	0x007A, r20
	display_ddr = display_ddr_wsk;
 2a2:	30 93 7d 00 	sts	0x007D, r19
 2a6:	20 93 7c 00 	sts	0x007C, r18
	display_port = display_port_wsk;
 2aa:	10 93 71 00 	sts	0x0071, r17
 2ae:	00 93 70 00 	sts	0x0070, r16
	
	*digit_ddr = 0xFF;
 2b2:	8f ef       	ldi	r24, 0xFF	; 255
 2b4:	fb 01       	movw	r30, r22
 2b6:	80 83       	st	Z, r24
	*digit_port = 0;
 2b8:	e0 91 7a 00 	lds	r30, 0x007A
 2bc:	f0 91 7b 00 	lds	r31, 0x007B
 2c0:	10 82       	st	Z, r1
	*display_ddr = 0;
 2c2:	e0 91 7c 00 	lds	r30, 0x007C
 2c6:	f0 91 7d 00 	lds	r31, 0x007D
 2ca:	10 82       	st	Z, r1
	*display_port = 0xFF;
 2cc:	e0 91 70 00 	lds	r30, 0x0070
 2d0:	f0 91 71 00 	lds	r31, 0x0071
 2d4:	80 83       	st	Z, r24
	
	int i;
	for(i = 0; i < total_displays; i++)
 2d6:	80 91 7e 00 	lds	r24, 0x007E
 2da:	88 23       	and	r24, r24
 2dc:	c9 f0       	breq	.+50     	; 0x310 <LEDInit+0x86>
 2de:	80 e0       	ldi	r24, 0x00	; 0
 2e0:	90 e0       	ldi	r25, 0x00	; 0
	{
		*display_ddr |= (1 << i); // set OUT
 2e2:	41 e0       	ldi	r20, 0x01	; 1
 2e4:	50 e0       	ldi	r21, 0x00	; 0
 2e6:	e0 91 7c 00 	lds	r30, 0x007C
 2ea:	f0 91 7d 00 	lds	r31, 0x007D
 2ee:	60 81       	ld	r22, Z
 2f0:	9a 01       	movw	r18, r20
 2f2:	08 2e       	mov	r0, r24
 2f4:	02 c0       	rjmp	.+4      	; 0x2fa <LEDInit+0x70>
 2f6:	22 0f       	add	r18, r18
 2f8:	33 1f       	adc	r19, r19
 2fa:	0a 94       	dec	r0
 2fc:	e2 f7       	brpl	.-8      	; 0x2f6 <LEDInit+0x6c>
 2fe:	26 2b       	or	r18, r22
 300:	20 83       	st	Z, r18
	*digit_port = 0;
	*display_ddr = 0;
	*display_port = 0xFF;
	
	int i;
	for(i = 0; i < total_displays; i++)
 302:	01 96       	adiw	r24, 0x01	; 1
 304:	20 91 7e 00 	lds	r18, 0x007E
 308:	30 e0       	ldi	r19, 0x00	; 0
 30a:	82 17       	cp	r24, r18
 30c:	93 07       	cpc	r25, r19
 30e:	5c f3       	brlt	.-42     	; 0x2e6 <LEDInit+0x5c>
	{
		*display_ddr |= (1 << i); // set OUT
	}
	
	set_timer0();
 310:	0e 94 3f 01 	call	0x27e	; 0x27e <set_timer0>
}
 314:	1f 91       	pop	r17
 316:	0f 91       	pop	r16
 318:	08 95       	ret

0000031a <main>:

#include <util/delay.h>

int main(void)
{
	LEDInit(6, &DDRC, &PORTC, &DDRD, &PORTD);
 31a:	02 e3       	ldi	r16, 0x32	; 50
 31c:	10 e0       	ldi	r17, 0x00	; 0
 31e:	21 e3       	ldi	r18, 0x31	; 49
 320:	30 e0       	ldi	r19, 0x00	; 0
 322:	45 e3       	ldi	r20, 0x35	; 53
 324:	50 e0       	ldi	r21, 0x00	; 0
 326:	64 e3       	ldi	r22, 0x34	; 52
 328:	70 e0       	ldi	r23, 0x00	; 0
 32a:	86 e0       	ldi	r24, 0x06	; 6
 32c:	0e 94 45 01 	call	0x28a	; 0x28a <LEDInit>
	sei();
 330:	78 94       	sei
	
	LEDSetNumber(32);
 332:	80 e2       	ldi	r24, 0x20	; 32
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	0e 94 12 01 	call	0x224	; 0x224 <LEDSetNumber>
	LEDSetValue("7 312");
 33a:	84 e6       	ldi	r24, 0x64	; 100
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <LEDSetValue>
	clearDisplay();
 342:	0e 94 b4 00 	call	0x168	; 0x168 <clearDisplay>
	int b = 0;
 346:	c0 e0       	ldi	r28, 0x00	; 0
 348:	d0 e0       	ldi	r29, 0x00	; 0
    while(1)
    {
		int static a = 0;

		if(a == 150)
			b = 1;
 34a:	ee 24       	eor	r14, r14
 34c:	e3 94       	inc	r14
 34e:	f1 2c       	mov	r15, r1
		else if(a == 0)
			b = 0;
 350:	00 e0       	ldi	r16, 0x00	; 0
 352:	10 e0       	ldi	r17, 0x00	; 0
	
    while(1)
    {
		int static a = 0;

		if(a == 150)
 354:	80 91 6a 00 	lds	r24, 0x006A
 358:	90 91 6b 00 	lds	r25, 0x006B
 35c:	86 39       	cpi	r24, 0x96	; 150
 35e:	91 05       	cpc	r25, r1
 360:	29 f0       	breq	.+10     	; 0x36c <main+0x52>
			b = 1;
		else if(a == 0)
 362:	00 97       	sbiw	r24, 0x00	; 0
 364:	79 f0       	breq	.+30     	; 0x384 <main+0x6a>
			b = 0;
			
		(b) ? LEDSetNumber(a--) : LEDSetNumber(a++);
 366:	20 97       	sbiw	r28, 0x00	; 0
 368:	19 f4       	brne	.+6      	; 0x370 <main+0x56>
 36a:	0e c0       	rjmp	.+28     	; 0x388 <main+0x6e>
    while(1)
    {
		int static a = 0;

		if(a == 150)
			b = 1;
 36c:	ce 2d       	mov	r28, r14
 36e:	df 2d       	mov	r29, r15
		else if(a == 0)
			b = 0;
			
		(b) ? LEDSetNumber(a--) : LEDSetNumber(a++);
 370:	9c 01       	movw	r18, r24
 372:	21 50       	subi	r18, 0x01	; 1
 374:	31 09       	sbc	r19, r1
 376:	30 93 6b 00 	sts	0x006B, r19
 37a:	20 93 6a 00 	sts	0x006A, r18
 37e:	0e 94 12 01 	call	0x224	; 0x224 <LEDSetNumber>
 382:	0b c0       	rjmp	.+22     	; 0x39a <main+0x80>
		int static a = 0;

		if(a == 150)
			b = 1;
		else if(a == 0)
			b = 0;
 384:	c0 2f       	mov	r28, r16
 386:	d1 2f       	mov	r29, r17
			
		(b) ? LEDSetNumber(a--) : LEDSetNumber(a++);
 388:	9c 01       	movw	r18, r24
 38a:	2f 5f       	subi	r18, 0xFF	; 255
 38c:	3f 4f       	sbci	r19, 0xFF	; 255
 38e:	30 93 6b 00 	sts	0x006B, r19
 392:	20 93 6a 00 	sts	0x006A, r18
 396:	0e 94 12 01 	call	0x224	; 0x224 <LEDSetNumber>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 39a:	8f ef       	ldi	r24, 0xFF	; 255
 39c:	90 e7       	ldi	r25, 0x70	; 112
 39e:	22 e0       	ldi	r18, 0x02	; 2
 3a0:	81 50       	subi	r24, 0x01	; 1
 3a2:	90 40       	sbci	r25, 0x00	; 0
 3a4:	20 40       	sbci	r18, 0x00	; 0
 3a6:	e1 f7       	brne	.-8      	; 0x3a0 <main+0x86>
 3a8:	00 c0       	rjmp	.+0      	; 0x3aa <main+0x90>
 3aa:	00 00       	nop
 3ac:	d3 cf       	rjmp	.-90     	; 0x354 <main+0x3a>

000003ae <__divmodhi4>:
 3ae:	97 fb       	bst	r25, 7
 3b0:	07 2e       	mov	r0, r23
 3b2:	16 f4       	brtc	.+4      	; 0x3b8 <__divmodhi4+0xa>
 3b4:	00 94       	com	r0
 3b6:	07 d0       	rcall	.+14     	; 0x3c6 <__divmodhi4_neg1>
 3b8:	77 fd       	sbrc	r23, 7
 3ba:	09 d0       	rcall	.+18     	; 0x3ce <__divmodhi4_neg2>
 3bc:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__udivmodhi4>
 3c0:	07 fc       	sbrc	r0, 7
 3c2:	05 d0       	rcall	.+10     	; 0x3ce <__divmodhi4_neg2>
 3c4:	3e f4       	brtc	.+14     	; 0x3d4 <__divmodhi4_exit>

000003c6 <__divmodhi4_neg1>:
 3c6:	90 95       	com	r25
 3c8:	81 95       	neg	r24
 3ca:	9f 4f       	sbci	r25, 0xFF	; 255
 3cc:	08 95       	ret

000003ce <__divmodhi4_neg2>:
 3ce:	70 95       	com	r23
 3d0:	61 95       	neg	r22
 3d2:	7f 4f       	sbci	r23, 0xFF	; 255

000003d4 <__divmodhi4_exit>:
 3d4:	08 95       	ret

000003d6 <__tablejump2__>:
 3d6:	ee 0f       	add	r30, r30
 3d8:	ff 1f       	adc	r31, r31

000003da <__tablejump__>:
 3da:	05 90       	lpm	r0, Z+
 3dc:	f4 91       	lpm	r31, Z
 3de:	e0 2d       	mov	r30, r0
 3e0:	09 94       	ijmp

000003e2 <__udivmodhi4>:
 3e2:	aa 1b       	sub	r26, r26
 3e4:	bb 1b       	sub	r27, r27
 3e6:	51 e1       	ldi	r21, 0x11	; 17
 3e8:	07 c0       	rjmp	.+14     	; 0x3f8 <__udivmodhi4_ep>

000003ea <__udivmodhi4_loop>:
 3ea:	aa 1f       	adc	r26, r26
 3ec:	bb 1f       	adc	r27, r27
 3ee:	a6 17       	cp	r26, r22
 3f0:	b7 07       	cpc	r27, r23
 3f2:	10 f0       	brcs	.+4      	; 0x3f8 <__udivmodhi4_ep>
 3f4:	a6 1b       	sub	r26, r22
 3f6:	b7 0b       	sbc	r27, r23

000003f8 <__udivmodhi4_ep>:
 3f8:	88 1f       	adc	r24, r24
 3fa:	99 1f       	adc	r25, r25
 3fc:	5a 95       	dec	r21
 3fe:	a9 f7       	brne	.-22     	; 0x3ea <__udivmodhi4_loop>
 400:	80 95       	com	r24
 402:	90 95       	com	r25
 404:	bc 01       	movw	r22, r24
 406:	cd 01       	movw	r24, r26
 408:	08 95       	ret

0000040a <sprintf>:
 40a:	ae e0       	ldi	r26, 0x0E	; 14
 40c:	b0 e0       	ldi	r27, 0x00	; 0
 40e:	eb e0       	ldi	r30, 0x0B	; 11
 410:	f2 e0       	ldi	r31, 0x02	; 2
 412:	0c 94 ad 04 	jmp	0x95a	; 0x95a <__prologue_saves__+0x1c>
 416:	0d 89       	ldd	r16, Y+21	; 0x15
 418:	1e 89       	ldd	r17, Y+22	; 0x16
 41a:	86 e0       	ldi	r24, 0x06	; 6
 41c:	8c 83       	std	Y+4, r24	; 0x04
 41e:	1a 83       	std	Y+2, r17	; 0x02
 420:	09 83       	std	Y+1, r16	; 0x01
 422:	8f ef       	ldi	r24, 0xFF	; 255
 424:	9f e7       	ldi	r25, 0x7F	; 127
 426:	9e 83       	std	Y+6, r25	; 0x06
 428:	8d 83       	std	Y+5, r24	; 0x05
 42a:	ae 01       	movw	r20, r28
 42c:	47 5e       	subi	r20, 0xE7	; 231
 42e:	5f 4f       	sbci	r21, 0xFF	; 255
 430:	6f 89       	ldd	r22, Y+23	; 0x17
 432:	78 8d       	ldd	r23, Y+24	; 0x18
 434:	ce 01       	movw	r24, r28
 436:	01 96       	adiw	r24, 0x01	; 1
 438:	0e 94 27 02 	call	0x44e	; 0x44e <vfprintf>
 43c:	ef 81       	ldd	r30, Y+7	; 0x07
 43e:	f8 85       	ldd	r31, Y+8	; 0x08
 440:	e0 0f       	add	r30, r16
 442:	f1 1f       	adc	r31, r17
 444:	10 82       	st	Z, r1
 446:	2e 96       	adiw	r28, 0x0e	; 14
 448:	e4 e0       	ldi	r30, 0x04	; 4
 44a:	0c 94 c9 04 	jmp	0x992	; 0x992 <__epilogue_restores__+0x1c>

0000044e <vfprintf>:
 44e:	ac e0       	ldi	r26, 0x0C	; 12
 450:	b0 e0       	ldi	r27, 0x00	; 0
 452:	ed e2       	ldi	r30, 0x2D	; 45
 454:	f2 e0       	ldi	r31, 0x02	; 2
 456:	0c 94 9f 04 	jmp	0x93e	; 0x93e <__prologue_saves__>
 45a:	7c 01       	movw	r14, r24
 45c:	6b 01       	movw	r12, r22
 45e:	8a 01       	movw	r16, r20
 460:	fc 01       	movw	r30, r24
 462:	17 82       	std	Z+7, r1	; 0x07
 464:	16 82       	std	Z+6, r1	; 0x06
 466:	83 81       	ldd	r24, Z+3	; 0x03
 468:	81 ff       	sbrs	r24, 1
 46a:	bd c1       	rjmp	.+890    	; 0x7e6 <__stack+0x387>
 46c:	ce 01       	movw	r24, r28
 46e:	01 96       	adiw	r24, 0x01	; 1
 470:	4c 01       	movw	r8, r24
 472:	f7 01       	movw	r30, r14
 474:	93 81       	ldd	r25, Z+3	; 0x03
 476:	f6 01       	movw	r30, r12
 478:	93 fd       	sbrc	r25, 3
 47a:	85 91       	lpm	r24, Z+
 47c:	93 ff       	sbrs	r25, 3
 47e:	81 91       	ld	r24, Z+
 480:	6f 01       	movw	r12, r30
 482:	88 23       	and	r24, r24
 484:	09 f4       	brne	.+2      	; 0x488 <__stack+0x29>
 486:	ab c1       	rjmp	.+854    	; 0x7de <__stack+0x37f>
 488:	85 32       	cpi	r24, 0x25	; 37
 48a:	39 f4       	brne	.+14     	; 0x49a <__stack+0x3b>
 48c:	93 fd       	sbrc	r25, 3
 48e:	85 91       	lpm	r24, Z+
 490:	93 ff       	sbrs	r25, 3
 492:	81 91       	ld	r24, Z+
 494:	6f 01       	movw	r12, r30
 496:	85 32       	cpi	r24, 0x25	; 37
 498:	29 f4       	brne	.+10     	; 0x4a4 <__stack+0x45>
 49a:	b7 01       	movw	r22, r14
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	0e 94 0f 04 	call	0x81e	; 0x81e <fputc>
 4a2:	e7 cf       	rjmp	.-50     	; 0x472 <__stack+0x13>
 4a4:	51 2c       	mov	r5, r1
 4a6:	31 2c       	mov	r3, r1
 4a8:	20 e0       	ldi	r18, 0x00	; 0
 4aa:	20 32       	cpi	r18, 0x20	; 32
 4ac:	a0 f4       	brcc	.+40     	; 0x4d6 <__stack+0x77>
 4ae:	8b 32       	cpi	r24, 0x2B	; 43
 4b0:	69 f0       	breq	.+26     	; 0x4cc <__stack+0x6d>
 4b2:	30 f4       	brcc	.+12     	; 0x4c0 <__stack+0x61>
 4b4:	80 32       	cpi	r24, 0x20	; 32
 4b6:	59 f0       	breq	.+22     	; 0x4ce <__stack+0x6f>
 4b8:	83 32       	cpi	r24, 0x23	; 35
 4ba:	69 f4       	brne	.+26     	; 0x4d6 <__stack+0x77>
 4bc:	20 61       	ori	r18, 0x10	; 16
 4be:	2c c0       	rjmp	.+88     	; 0x518 <__stack+0xb9>
 4c0:	8d 32       	cpi	r24, 0x2D	; 45
 4c2:	39 f0       	breq	.+14     	; 0x4d2 <__stack+0x73>
 4c4:	80 33       	cpi	r24, 0x30	; 48
 4c6:	39 f4       	brne	.+14     	; 0x4d6 <__stack+0x77>
 4c8:	21 60       	ori	r18, 0x01	; 1
 4ca:	26 c0       	rjmp	.+76     	; 0x518 <__stack+0xb9>
 4cc:	22 60       	ori	r18, 0x02	; 2
 4ce:	24 60       	ori	r18, 0x04	; 4
 4d0:	23 c0       	rjmp	.+70     	; 0x518 <__stack+0xb9>
 4d2:	28 60       	ori	r18, 0x08	; 8
 4d4:	21 c0       	rjmp	.+66     	; 0x518 <__stack+0xb9>
 4d6:	27 fd       	sbrc	r18, 7
 4d8:	27 c0       	rjmp	.+78     	; 0x528 <__stack+0xc9>
 4da:	30 ed       	ldi	r19, 0xD0	; 208
 4dc:	38 0f       	add	r19, r24
 4de:	3a 30       	cpi	r19, 0x0A	; 10
 4e0:	78 f4       	brcc	.+30     	; 0x500 <__stack+0xa1>
 4e2:	26 ff       	sbrs	r18, 6
 4e4:	06 c0       	rjmp	.+12     	; 0x4f2 <__stack+0x93>
 4e6:	fa e0       	ldi	r31, 0x0A	; 10
 4e8:	5f 9e       	mul	r5, r31
 4ea:	30 0d       	add	r19, r0
 4ec:	11 24       	eor	r1, r1
 4ee:	53 2e       	mov	r5, r19
 4f0:	13 c0       	rjmp	.+38     	; 0x518 <__stack+0xb9>
 4f2:	8a e0       	ldi	r24, 0x0A	; 10
 4f4:	38 9e       	mul	r3, r24
 4f6:	30 0d       	add	r19, r0
 4f8:	11 24       	eor	r1, r1
 4fa:	33 2e       	mov	r3, r19
 4fc:	20 62       	ori	r18, 0x20	; 32
 4fe:	0c c0       	rjmp	.+24     	; 0x518 <__stack+0xb9>
 500:	8e 32       	cpi	r24, 0x2E	; 46
 502:	21 f4       	brne	.+8      	; 0x50c <__stack+0xad>
 504:	26 fd       	sbrc	r18, 6
 506:	6b c1       	rjmp	.+726    	; 0x7de <__stack+0x37f>
 508:	20 64       	ori	r18, 0x40	; 64
 50a:	06 c0       	rjmp	.+12     	; 0x518 <__stack+0xb9>
 50c:	8c 36       	cpi	r24, 0x6C	; 108
 50e:	11 f4       	brne	.+4      	; 0x514 <__stack+0xb5>
 510:	20 68       	ori	r18, 0x80	; 128
 512:	02 c0       	rjmp	.+4      	; 0x518 <__stack+0xb9>
 514:	88 36       	cpi	r24, 0x68	; 104
 516:	41 f4       	brne	.+16     	; 0x528 <__stack+0xc9>
 518:	f6 01       	movw	r30, r12
 51a:	93 fd       	sbrc	r25, 3
 51c:	85 91       	lpm	r24, Z+
 51e:	93 ff       	sbrs	r25, 3
 520:	81 91       	ld	r24, Z+
 522:	6f 01       	movw	r12, r30
 524:	81 11       	cpse	r24, r1
 526:	c1 cf       	rjmp	.-126    	; 0x4aa <__stack+0x4b>
 528:	98 2f       	mov	r25, r24
 52a:	9f 7d       	andi	r25, 0xDF	; 223
 52c:	95 54       	subi	r25, 0x45	; 69
 52e:	93 30       	cpi	r25, 0x03	; 3
 530:	28 f4       	brcc	.+10     	; 0x53c <__stack+0xdd>
 532:	0c 5f       	subi	r16, 0xFC	; 252
 534:	1f 4f       	sbci	r17, 0xFF	; 255
 536:	ff e3       	ldi	r31, 0x3F	; 63
 538:	f9 83       	std	Y+1, r31	; 0x01
 53a:	0d c0       	rjmp	.+26     	; 0x556 <__stack+0xf7>
 53c:	83 36       	cpi	r24, 0x63	; 99
 53e:	31 f0       	breq	.+12     	; 0x54c <__stack+0xed>
 540:	83 37       	cpi	r24, 0x73	; 115
 542:	71 f0       	breq	.+28     	; 0x560 <__stack+0x101>
 544:	83 35       	cpi	r24, 0x53	; 83
 546:	09 f0       	breq	.+2      	; 0x54a <__stack+0xeb>
 548:	5b c0       	rjmp	.+182    	; 0x600 <__stack+0x1a1>
 54a:	22 c0       	rjmp	.+68     	; 0x590 <__stack+0x131>
 54c:	f8 01       	movw	r30, r16
 54e:	80 81       	ld	r24, Z
 550:	89 83       	std	Y+1, r24	; 0x01
 552:	0e 5f       	subi	r16, 0xFE	; 254
 554:	1f 4f       	sbci	r17, 0xFF	; 255
 556:	44 24       	eor	r4, r4
 558:	43 94       	inc	r4
 55a:	51 2c       	mov	r5, r1
 55c:	54 01       	movw	r10, r8
 55e:	15 c0       	rjmp	.+42     	; 0x58a <__stack+0x12b>
 560:	38 01       	movw	r6, r16
 562:	f2 e0       	ldi	r31, 0x02	; 2
 564:	6f 0e       	add	r6, r31
 566:	71 1c       	adc	r7, r1
 568:	f8 01       	movw	r30, r16
 56a:	a0 80       	ld	r10, Z
 56c:	b1 80       	ldd	r11, Z+1	; 0x01
 56e:	26 ff       	sbrs	r18, 6
 570:	03 c0       	rjmp	.+6      	; 0x578 <__stack+0x119>
 572:	65 2d       	mov	r22, r5
 574:	70 e0       	ldi	r23, 0x00	; 0
 576:	02 c0       	rjmp	.+4      	; 0x57c <__stack+0x11d>
 578:	6f ef       	ldi	r22, 0xFF	; 255
 57a:	7f ef       	ldi	r23, 0xFF	; 255
 57c:	c5 01       	movw	r24, r10
 57e:	2c 87       	std	Y+12, r18	; 0x0c
 580:	0e 94 04 04 	call	0x808	; 0x808 <strnlen>
 584:	2c 01       	movw	r4, r24
 586:	83 01       	movw	r16, r6
 588:	2c 85       	ldd	r18, Y+12	; 0x0c
 58a:	2f 77       	andi	r18, 0x7F	; 127
 58c:	22 2e       	mov	r2, r18
 58e:	17 c0       	rjmp	.+46     	; 0x5be <__stack+0x15f>
 590:	38 01       	movw	r6, r16
 592:	f2 e0       	ldi	r31, 0x02	; 2
 594:	6f 0e       	add	r6, r31
 596:	71 1c       	adc	r7, r1
 598:	f8 01       	movw	r30, r16
 59a:	a0 80       	ld	r10, Z
 59c:	b1 80       	ldd	r11, Z+1	; 0x01
 59e:	26 ff       	sbrs	r18, 6
 5a0:	03 c0       	rjmp	.+6      	; 0x5a8 <__stack+0x149>
 5a2:	65 2d       	mov	r22, r5
 5a4:	70 e0       	ldi	r23, 0x00	; 0
 5a6:	02 c0       	rjmp	.+4      	; 0x5ac <__stack+0x14d>
 5a8:	6f ef       	ldi	r22, 0xFF	; 255
 5aa:	7f ef       	ldi	r23, 0xFF	; 255
 5ac:	c5 01       	movw	r24, r10
 5ae:	2c 87       	std	Y+12, r18	; 0x0c
 5b0:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <strnlen_P>
 5b4:	2c 01       	movw	r4, r24
 5b6:	2c 85       	ldd	r18, Y+12	; 0x0c
 5b8:	20 68       	ori	r18, 0x80	; 128
 5ba:	22 2e       	mov	r2, r18
 5bc:	83 01       	movw	r16, r6
 5be:	23 fc       	sbrc	r2, 3
 5c0:	1b c0       	rjmp	.+54     	; 0x5f8 <__stack+0x199>
 5c2:	83 2d       	mov	r24, r3
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	48 16       	cp	r4, r24
 5c8:	59 06       	cpc	r5, r25
 5ca:	b0 f4       	brcc	.+44     	; 0x5f8 <__stack+0x199>
 5cc:	b7 01       	movw	r22, r14
 5ce:	80 e2       	ldi	r24, 0x20	; 32
 5d0:	90 e0       	ldi	r25, 0x00	; 0
 5d2:	0e 94 0f 04 	call	0x81e	; 0x81e <fputc>
 5d6:	3a 94       	dec	r3
 5d8:	f4 cf       	rjmp	.-24     	; 0x5c2 <__stack+0x163>
 5da:	f5 01       	movw	r30, r10
 5dc:	27 fc       	sbrc	r2, 7
 5de:	85 91       	lpm	r24, Z+
 5e0:	27 fe       	sbrs	r2, 7
 5e2:	81 91       	ld	r24, Z+
 5e4:	5f 01       	movw	r10, r30
 5e6:	b7 01       	movw	r22, r14
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	0e 94 0f 04 	call	0x81e	; 0x81e <fputc>
 5ee:	31 10       	cpse	r3, r1
 5f0:	3a 94       	dec	r3
 5f2:	f1 e0       	ldi	r31, 0x01	; 1
 5f4:	4f 1a       	sub	r4, r31
 5f6:	51 08       	sbc	r5, r1
 5f8:	41 14       	cp	r4, r1
 5fa:	51 04       	cpc	r5, r1
 5fc:	71 f7       	brne	.-36     	; 0x5da <__stack+0x17b>
 5fe:	e5 c0       	rjmp	.+458    	; 0x7ca <__stack+0x36b>
 600:	84 36       	cpi	r24, 0x64	; 100
 602:	11 f0       	breq	.+4      	; 0x608 <__stack+0x1a9>
 604:	89 36       	cpi	r24, 0x69	; 105
 606:	39 f5       	brne	.+78     	; 0x656 <__stack+0x1f7>
 608:	f8 01       	movw	r30, r16
 60a:	27 ff       	sbrs	r18, 7
 60c:	07 c0       	rjmp	.+14     	; 0x61c <__stack+0x1bd>
 60e:	60 81       	ld	r22, Z
 610:	71 81       	ldd	r23, Z+1	; 0x01
 612:	82 81       	ldd	r24, Z+2	; 0x02
 614:	93 81       	ldd	r25, Z+3	; 0x03
 616:	0c 5f       	subi	r16, 0xFC	; 252
 618:	1f 4f       	sbci	r17, 0xFF	; 255
 61a:	08 c0       	rjmp	.+16     	; 0x62c <__stack+0x1cd>
 61c:	60 81       	ld	r22, Z
 61e:	71 81       	ldd	r23, Z+1	; 0x01
 620:	88 27       	eor	r24, r24
 622:	77 fd       	sbrc	r23, 7
 624:	80 95       	com	r24
 626:	98 2f       	mov	r25, r24
 628:	0e 5f       	subi	r16, 0xFE	; 254
 62a:	1f 4f       	sbci	r17, 0xFF	; 255
 62c:	2f 76       	andi	r18, 0x6F	; 111
 62e:	b2 2e       	mov	r11, r18
 630:	97 ff       	sbrs	r25, 7
 632:	09 c0       	rjmp	.+18     	; 0x646 <__stack+0x1e7>
 634:	90 95       	com	r25
 636:	80 95       	com	r24
 638:	70 95       	com	r23
 63a:	61 95       	neg	r22
 63c:	7f 4f       	sbci	r23, 0xFF	; 255
 63e:	8f 4f       	sbci	r24, 0xFF	; 255
 640:	9f 4f       	sbci	r25, 0xFF	; 255
 642:	20 68       	ori	r18, 0x80	; 128
 644:	b2 2e       	mov	r11, r18
 646:	2a e0       	ldi	r18, 0x0A	; 10
 648:	30 e0       	ldi	r19, 0x00	; 0
 64a:	a4 01       	movw	r20, r8
 64c:	0e 94 41 04 	call	0x882	; 0x882 <__ultoa_invert>
 650:	a8 2e       	mov	r10, r24
 652:	a8 18       	sub	r10, r8
 654:	44 c0       	rjmp	.+136    	; 0x6de <__stack+0x27f>
 656:	85 37       	cpi	r24, 0x75	; 117
 658:	29 f4       	brne	.+10     	; 0x664 <__stack+0x205>
 65a:	2f 7e       	andi	r18, 0xEF	; 239
 65c:	b2 2e       	mov	r11, r18
 65e:	2a e0       	ldi	r18, 0x0A	; 10
 660:	30 e0       	ldi	r19, 0x00	; 0
 662:	25 c0       	rjmp	.+74     	; 0x6ae <__stack+0x24f>
 664:	f2 2f       	mov	r31, r18
 666:	f9 7f       	andi	r31, 0xF9	; 249
 668:	bf 2e       	mov	r11, r31
 66a:	8f 36       	cpi	r24, 0x6F	; 111
 66c:	c1 f0       	breq	.+48     	; 0x69e <__stack+0x23f>
 66e:	18 f4       	brcc	.+6      	; 0x676 <__stack+0x217>
 670:	88 35       	cpi	r24, 0x58	; 88
 672:	79 f0       	breq	.+30     	; 0x692 <__stack+0x233>
 674:	b4 c0       	rjmp	.+360    	; 0x7de <__stack+0x37f>
 676:	80 37       	cpi	r24, 0x70	; 112
 678:	19 f0       	breq	.+6      	; 0x680 <__stack+0x221>
 67a:	88 37       	cpi	r24, 0x78	; 120
 67c:	21 f0       	breq	.+8      	; 0x686 <__stack+0x227>
 67e:	af c0       	rjmp	.+350    	; 0x7de <__stack+0x37f>
 680:	2f 2f       	mov	r18, r31
 682:	20 61       	ori	r18, 0x10	; 16
 684:	b2 2e       	mov	r11, r18
 686:	b4 fe       	sbrs	r11, 4
 688:	0d c0       	rjmp	.+26     	; 0x6a4 <__stack+0x245>
 68a:	8b 2d       	mov	r24, r11
 68c:	84 60       	ori	r24, 0x04	; 4
 68e:	b8 2e       	mov	r11, r24
 690:	09 c0       	rjmp	.+18     	; 0x6a4 <__stack+0x245>
 692:	24 ff       	sbrs	r18, 4
 694:	0a c0       	rjmp	.+20     	; 0x6aa <__stack+0x24b>
 696:	9f 2f       	mov	r25, r31
 698:	96 60       	ori	r25, 0x06	; 6
 69a:	b9 2e       	mov	r11, r25
 69c:	06 c0       	rjmp	.+12     	; 0x6aa <__stack+0x24b>
 69e:	28 e0       	ldi	r18, 0x08	; 8
 6a0:	30 e0       	ldi	r19, 0x00	; 0
 6a2:	05 c0       	rjmp	.+10     	; 0x6ae <__stack+0x24f>
 6a4:	20 e1       	ldi	r18, 0x10	; 16
 6a6:	30 e0       	ldi	r19, 0x00	; 0
 6a8:	02 c0       	rjmp	.+4      	; 0x6ae <__stack+0x24f>
 6aa:	20 e1       	ldi	r18, 0x10	; 16
 6ac:	32 e0       	ldi	r19, 0x02	; 2
 6ae:	f8 01       	movw	r30, r16
 6b0:	b7 fe       	sbrs	r11, 7
 6b2:	07 c0       	rjmp	.+14     	; 0x6c2 <__stack+0x263>
 6b4:	60 81       	ld	r22, Z
 6b6:	71 81       	ldd	r23, Z+1	; 0x01
 6b8:	82 81       	ldd	r24, Z+2	; 0x02
 6ba:	93 81       	ldd	r25, Z+3	; 0x03
 6bc:	0c 5f       	subi	r16, 0xFC	; 252
 6be:	1f 4f       	sbci	r17, 0xFF	; 255
 6c0:	06 c0       	rjmp	.+12     	; 0x6ce <__stack+0x26f>
 6c2:	60 81       	ld	r22, Z
 6c4:	71 81       	ldd	r23, Z+1	; 0x01
 6c6:	80 e0       	ldi	r24, 0x00	; 0
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	0e 5f       	subi	r16, 0xFE	; 254
 6cc:	1f 4f       	sbci	r17, 0xFF	; 255
 6ce:	a4 01       	movw	r20, r8
 6d0:	0e 94 41 04 	call	0x882	; 0x882 <__ultoa_invert>
 6d4:	a8 2e       	mov	r10, r24
 6d6:	a8 18       	sub	r10, r8
 6d8:	fb 2d       	mov	r31, r11
 6da:	ff 77       	andi	r31, 0x7F	; 127
 6dc:	bf 2e       	mov	r11, r31
 6de:	b6 fe       	sbrs	r11, 6
 6e0:	0b c0       	rjmp	.+22     	; 0x6f8 <__stack+0x299>
 6e2:	2b 2d       	mov	r18, r11
 6e4:	2e 7f       	andi	r18, 0xFE	; 254
 6e6:	a5 14       	cp	r10, r5
 6e8:	50 f4       	brcc	.+20     	; 0x6fe <__stack+0x29f>
 6ea:	b4 fe       	sbrs	r11, 4
 6ec:	0a c0       	rjmp	.+20     	; 0x702 <__stack+0x2a3>
 6ee:	b2 fc       	sbrc	r11, 2
 6f0:	08 c0       	rjmp	.+16     	; 0x702 <__stack+0x2a3>
 6f2:	2b 2d       	mov	r18, r11
 6f4:	2e 7e       	andi	r18, 0xEE	; 238
 6f6:	05 c0       	rjmp	.+10     	; 0x702 <__stack+0x2a3>
 6f8:	7a 2c       	mov	r7, r10
 6fa:	2b 2d       	mov	r18, r11
 6fc:	03 c0       	rjmp	.+6      	; 0x704 <__stack+0x2a5>
 6fe:	7a 2c       	mov	r7, r10
 700:	01 c0       	rjmp	.+2      	; 0x704 <__stack+0x2a5>
 702:	75 2c       	mov	r7, r5
 704:	24 ff       	sbrs	r18, 4
 706:	0d c0       	rjmp	.+26     	; 0x722 <__stack+0x2c3>
 708:	fe 01       	movw	r30, r28
 70a:	ea 0d       	add	r30, r10
 70c:	f1 1d       	adc	r31, r1
 70e:	80 81       	ld	r24, Z
 710:	80 33       	cpi	r24, 0x30	; 48
 712:	11 f4       	brne	.+4      	; 0x718 <__stack+0x2b9>
 714:	29 7e       	andi	r18, 0xE9	; 233
 716:	09 c0       	rjmp	.+18     	; 0x72a <__stack+0x2cb>
 718:	22 ff       	sbrs	r18, 2
 71a:	06 c0       	rjmp	.+12     	; 0x728 <__stack+0x2c9>
 71c:	73 94       	inc	r7
 71e:	73 94       	inc	r7
 720:	04 c0       	rjmp	.+8      	; 0x72a <__stack+0x2cb>
 722:	82 2f       	mov	r24, r18
 724:	86 78       	andi	r24, 0x86	; 134
 726:	09 f0       	breq	.+2      	; 0x72a <__stack+0x2cb>
 728:	73 94       	inc	r7
 72a:	23 fd       	sbrc	r18, 3
 72c:	13 c0       	rjmp	.+38     	; 0x754 <__stack+0x2f5>
 72e:	20 ff       	sbrs	r18, 0
 730:	06 c0       	rjmp	.+12     	; 0x73e <__stack+0x2df>
 732:	5a 2c       	mov	r5, r10
 734:	73 14       	cp	r7, r3
 736:	18 f4       	brcc	.+6      	; 0x73e <__stack+0x2df>
 738:	53 0c       	add	r5, r3
 73a:	57 18       	sub	r5, r7
 73c:	73 2c       	mov	r7, r3
 73e:	73 14       	cp	r7, r3
 740:	68 f4       	brcc	.+26     	; 0x75c <__stack+0x2fd>
 742:	b7 01       	movw	r22, r14
 744:	80 e2       	ldi	r24, 0x20	; 32
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	2c 87       	std	Y+12, r18	; 0x0c
 74a:	0e 94 0f 04 	call	0x81e	; 0x81e <fputc>
 74e:	73 94       	inc	r7
 750:	2c 85       	ldd	r18, Y+12	; 0x0c
 752:	f5 cf       	rjmp	.-22     	; 0x73e <__stack+0x2df>
 754:	73 14       	cp	r7, r3
 756:	10 f4       	brcc	.+4      	; 0x75c <__stack+0x2fd>
 758:	37 18       	sub	r3, r7
 75a:	01 c0       	rjmp	.+2      	; 0x75e <__stack+0x2ff>
 75c:	31 2c       	mov	r3, r1
 75e:	24 ff       	sbrs	r18, 4
 760:	12 c0       	rjmp	.+36     	; 0x786 <__stack+0x327>
 762:	b7 01       	movw	r22, r14
 764:	80 e3       	ldi	r24, 0x30	; 48
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	2c 87       	std	Y+12, r18	; 0x0c
 76a:	0e 94 0f 04 	call	0x81e	; 0x81e <fputc>
 76e:	2c 85       	ldd	r18, Y+12	; 0x0c
 770:	22 ff       	sbrs	r18, 2
 772:	17 c0       	rjmp	.+46     	; 0x7a2 <__stack+0x343>
 774:	21 ff       	sbrs	r18, 1
 776:	03 c0       	rjmp	.+6      	; 0x77e <__stack+0x31f>
 778:	88 e5       	ldi	r24, 0x58	; 88
 77a:	90 e0       	ldi	r25, 0x00	; 0
 77c:	02 c0       	rjmp	.+4      	; 0x782 <__stack+0x323>
 77e:	88 e7       	ldi	r24, 0x78	; 120
 780:	90 e0       	ldi	r25, 0x00	; 0
 782:	b7 01       	movw	r22, r14
 784:	0c c0       	rjmp	.+24     	; 0x79e <__stack+0x33f>
 786:	82 2f       	mov	r24, r18
 788:	86 78       	andi	r24, 0x86	; 134
 78a:	59 f0       	breq	.+22     	; 0x7a2 <__stack+0x343>
 78c:	21 fd       	sbrc	r18, 1
 78e:	02 c0       	rjmp	.+4      	; 0x794 <__stack+0x335>
 790:	80 e2       	ldi	r24, 0x20	; 32
 792:	01 c0       	rjmp	.+2      	; 0x796 <__stack+0x337>
 794:	8b e2       	ldi	r24, 0x2B	; 43
 796:	27 fd       	sbrc	r18, 7
 798:	8d e2       	ldi	r24, 0x2D	; 45
 79a:	b7 01       	movw	r22, r14
 79c:	90 e0       	ldi	r25, 0x00	; 0
 79e:	0e 94 0f 04 	call	0x81e	; 0x81e <fputc>
 7a2:	a5 14       	cp	r10, r5
 7a4:	38 f4       	brcc	.+14     	; 0x7b4 <__stack+0x355>
 7a6:	b7 01       	movw	r22, r14
 7a8:	80 e3       	ldi	r24, 0x30	; 48
 7aa:	90 e0       	ldi	r25, 0x00	; 0
 7ac:	0e 94 0f 04 	call	0x81e	; 0x81e <fputc>
 7b0:	5a 94       	dec	r5
 7b2:	f7 cf       	rjmp	.-18     	; 0x7a2 <__stack+0x343>
 7b4:	aa 94       	dec	r10
 7b6:	f4 01       	movw	r30, r8
 7b8:	ea 0d       	add	r30, r10
 7ba:	f1 1d       	adc	r31, r1
 7bc:	80 81       	ld	r24, Z
 7be:	b7 01       	movw	r22, r14
 7c0:	90 e0       	ldi	r25, 0x00	; 0
 7c2:	0e 94 0f 04 	call	0x81e	; 0x81e <fputc>
 7c6:	a1 10       	cpse	r10, r1
 7c8:	f5 cf       	rjmp	.-22     	; 0x7b4 <__stack+0x355>
 7ca:	33 20       	and	r3, r3
 7cc:	09 f4       	brne	.+2      	; 0x7d0 <__stack+0x371>
 7ce:	51 ce       	rjmp	.-862    	; 0x472 <__stack+0x13>
 7d0:	b7 01       	movw	r22, r14
 7d2:	80 e2       	ldi	r24, 0x20	; 32
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	0e 94 0f 04 	call	0x81e	; 0x81e <fputc>
 7da:	3a 94       	dec	r3
 7dc:	f6 cf       	rjmp	.-20     	; 0x7ca <__stack+0x36b>
 7de:	f7 01       	movw	r30, r14
 7e0:	86 81       	ldd	r24, Z+6	; 0x06
 7e2:	97 81       	ldd	r25, Z+7	; 0x07
 7e4:	02 c0       	rjmp	.+4      	; 0x7ea <__stack+0x38b>
 7e6:	8f ef       	ldi	r24, 0xFF	; 255
 7e8:	9f ef       	ldi	r25, 0xFF	; 255
 7ea:	2c 96       	adiw	r28, 0x0c	; 12
 7ec:	e2 e1       	ldi	r30, 0x12	; 18
 7ee:	0c 94 bb 04 	jmp	0x976	; 0x976 <__epilogue_restores__>

000007f2 <strnlen_P>:
 7f2:	fc 01       	movw	r30, r24
 7f4:	05 90       	lpm	r0, Z+
 7f6:	61 50       	subi	r22, 0x01	; 1
 7f8:	70 40       	sbci	r23, 0x00	; 0
 7fa:	01 10       	cpse	r0, r1
 7fc:	d8 f7       	brcc	.-10     	; 0x7f4 <strnlen_P+0x2>
 7fe:	80 95       	com	r24
 800:	90 95       	com	r25
 802:	8e 0f       	add	r24, r30
 804:	9f 1f       	adc	r25, r31
 806:	08 95       	ret

00000808 <strnlen>:
 808:	fc 01       	movw	r30, r24
 80a:	61 50       	subi	r22, 0x01	; 1
 80c:	70 40       	sbci	r23, 0x00	; 0
 80e:	01 90       	ld	r0, Z+
 810:	01 10       	cpse	r0, r1
 812:	d8 f7       	brcc	.-10     	; 0x80a <strnlen+0x2>
 814:	80 95       	com	r24
 816:	90 95       	com	r25
 818:	8e 0f       	add	r24, r30
 81a:	9f 1f       	adc	r25, r31
 81c:	08 95       	ret

0000081e <fputc>:
 81e:	0f 93       	push	r16
 820:	1f 93       	push	r17
 822:	cf 93       	push	r28
 824:	df 93       	push	r29
 826:	18 2f       	mov	r17, r24
 828:	09 2f       	mov	r16, r25
 82a:	eb 01       	movw	r28, r22
 82c:	8b 81       	ldd	r24, Y+3	; 0x03
 82e:	81 fd       	sbrc	r24, 1
 830:	03 c0       	rjmp	.+6      	; 0x838 <fputc+0x1a>
 832:	8f ef       	ldi	r24, 0xFF	; 255
 834:	9f ef       	ldi	r25, 0xFF	; 255
 836:	20 c0       	rjmp	.+64     	; 0x878 <fputc+0x5a>
 838:	82 ff       	sbrs	r24, 2
 83a:	10 c0       	rjmp	.+32     	; 0x85c <fputc+0x3e>
 83c:	4e 81       	ldd	r20, Y+6	; 0x06
 83e:	5f 81       	ldd	r21, Y+7	; 0x07
 840:	2c 81       	ldd	r18, Y+4	; 0x04
 842:	3d 81       	ldd	r19, Y+5	; 0x05
 844:	42 17       	cp	r20, r18
 846:	53 07       	cpc	r21, r19
 848:	7c f4       	brge	.+30     	; 0x868 <fputc+0x4a>
 84a:	e8 81       	ld	r30, Y
 84c:	f9 81       	ldd	r31, Y+1	; 0x01
 84e:	9f 01       	movw	r18, r30
 850:	2f 5f       	subi	r18, 0xFF	; 255
 852:	3f 4f       	sbci	r19, 0xFF	; 255
 854:	39 83       	std	Y+1, r19	; 0x01
 856:	28 83       	st	Y, r18
 858:	10 83       	st	Z, r17
 85a:	06 c0       	rjmp	.+12     	; 0x868 <fputc+0x4a>
 85c:	e8 85       	ldd	r30, Y+8	; 0x08
 85e:	f9 85       	ldd	r31, Y+9	; 0x09
 860:	81 2f       	mov	r24, r17
 862:	09 95       	icall
 864:	89 2b       	or	r24, r25
 866:	29 f7       	brne	.-54     	; 0x832 <fputc+0x14>
 868:	2e 81       	ldd	r18, Y+6	; 0x06
 86a:	3f 81       	ldd	r19, Y+7	; 0x07
 86c:	2f 5f       	subi	r18, 0xFF	; 255
 86e:	3f 4f       	sbci	r19, 0xFF	; 255
 870:	3f 83       	std	Y+7, r19	; 0x07
 872:	2e 83       	std	Y+6, r18	; 0x06
 874:	81 2f       	mov	r24, r17
 876:	90 2f       	mov	r25, r16
 878:	df 91       	pop	r29
 87a:	cf 91       	pop	r28
 87c:	1f 91       	pop	r17
 87e:	0f 91       	pop	r16
 880:	08 95       	ret

00000882 <__ultoa_invert>:
 882:	fa 01       	movw	r30, r20
 884:	aa 27       	eor	r26, r26
 886:	28 30       	cpi	r18, 0x08	; 8
 888:	51 f1       	breq	.+84     	; 0x8de <__ultoa_invert+0x5c>
 88a:	20 31       	cpi	r18, 0x10	; 16
 88c:	81 f1       	breq	.+96     	; 0x8ee <__ultoa_invert+0x6c>
 88e:	e8 94       	clt
 890:	6f 93       	push	r22
 892:	6e 7f       	andi	r22, 0xFE	; 254
 894:	6e 5f       	subi	r22, 0xFE	; 254
 896:	7f 4f       	sbci	r23, 0xFF	; 255
 898:	8f 4f       	sbci	r24, 0xFF	; 255
 89a:	9f 4f       	sbci	r25, 0xFF	; 255
 89c:	af 4f       	sbci	r26, 0xFF	; 255
 89e:	b1 e0       	ldi	r27, 0x01	; 1
 8a0:	3e d0       	rcall	.+124    	; 0x91e <__ultoa_invert+0x9c>
 8a2:	b4 e0       	ldi	r27, 0x04	; 4
 8a4:	3c d0       	rcall	.+120    	; 0x91e <__ultoa_invert+0x9c>
 8a6:	67 0f       	add	r22, r23
 8a8:	78 1f       	adc	r23, r24
 8aa:	89 1f       	adc	r24, r25
 8ac:	9a 1f       	adc	r25, r26
 8ae:	a1 1d       	adc	r26, r1
 8b0:	68 0f       	add	r22, r24
 8b2:	79 1f       	adc	r23, r25
 8b4:	8a 1f       	adc	r24, r26
 8b6:	91 1d       	adc	r25, r1
 8b8:	a1 1d       	adc	r26, r1
 8ba:	6a 0f       	add	r22, r26
 8bc:	71 1d       	adc	r23, r1
 8be:	81 1d       	adc	r24, r1
 8c0:	91 1d       	adc	r25, r1
 8c2:	a1 1d       	adc	r26, r1
 8c4:	20 d0       	rcall	.+64     	; 0x906 <__ultoa_invert+0x84>
 8c6:	09 f4       	brne	.+2      	; 0x8ca <__ultoa_invert+0x48>
 8c8:	68 94       	set
 8ca:	3f 91       	pop	r19
 8cc:	2a e0       	ldi	r18, 0x0A	; 10
 8ce:	26 9f       	mul	r18, r22
 8d0:	11 24       	eor	r1, r1
 8d2:	30 19       	sub	r19, r0
 8d4:	30 5d       	subi	r19, 0xD0	; 208
 8d6:	31 93       	st	Z+, r19
 8d8:	de f6       	brtc	.-74     	; 0x890 <__ultoa_invert+0xe>
 8da:	cf 01       	movw	r24, r30
 8dc:	08 95       	ret
 8de:	46 2f       	mov	r20, r22
 8e0:	47 70       	andi	r20, 0x07	; 7
 8e2:	40 5d       	subi	r20, 0xD0	; 208
 8e4:	41 93       	st	Z+, r20
 8e6:	b3 e0       	ldi	r27, 0x03	; 3
 8e8:	0f d0       	rcall	.+30     	; 0x908 <__ultoa_invert+0x86>
 8ea:	c9 f7       	brne	.-14     	; 0x8de <__ultoa_invert+0x5c>
 8ec:	f6 cf       	rjmp	.-20     	; 0x8da <__ultoa_invert+0x58>
 8ee:	46 2f       	mov	r20, r22
 8f0:	4f 70       	andi	r20, 0x0F	; 15
 8f2:	40 5d       	subi	r20, 0xD0	; 208
 8f4:	4a 33       	cpi	r20, 0x3A	; 58
 8f6:	18 f0       	brcs	.+6      	; 0x8fe <__ultoa_invert+0x7c>
 8f8:	49 5d       	subi	r20, 0xD9	; 217
 8fa:	31 fd       	sbrc	r19, 1
 8fc:	40 52       	subi	r20, 0x20	; 32
 8fe:	41 93       	st	Z+, r20
 900:	02 d0       	rcall	.+4      	; 0x906 <__ultoa_invert+0x84>
 902:	a9 f7       	brne	.-22     	; 0x8ee <__ultoa_invert+0x6c>
 904:	ea cf       	rjmp	.-44     	; 0x8da <__ultoa_invert+0x58>
 906:	b4 e0       	ldi	r27, 0x04	; 4
 908:	a6 95       	lsr	r26
 90a:	97 95       	ror	r25
 90c:	87 95       	ror	r24
 90e:	77 95       	ror	r23
 910:	67 95       	ror	r22
 912:	ba 95       	dec	r27
 914:	c9 f7       	brne	.-14     	; 0x908 <__ultoa_invert+0x86>
 916:	00 97       	sbiw	r24, 0x00	; 0
 918:	61 05       	cpc	r22, r1
 91a:	71 05       	cpc	r23, r1
 91c:	08 95       	ret
 91e:	9b 01       	movw	r18, r22
 920:	ac 01       	movw	r20, r24
 922:	0a 2e       	mov	r0, r26
 924:	06 94       	lsr	r0
 926:	57 95       	ror	r21
 928:	47 95       	ror	r20
 92a:	37 95       	ror	r19
 92c:	27 95       	ror	r18
 92e:	ba 95       	dec	r27
 930:	c9 f7       	brne	.-14     	; 0x924 <__ultoa_invert+0xa2>
 932:	62 0f       	add	r22, r18
 934:	73 1f       	adc	r23, r19
 936:	84 1f       	adc	r24, r20
 938:	95 1f       	adc	r25, r21
 93a:	a0 1d       	adc	r26, r0
 93c:	08 95       	ret

0000093e <__prologue_saves__>:
 93e:	2f 92       	push	r2
 940:	3f 92       	push	r3
 942:	4f 92       	push	r4
 944:	5f 92       	push	r5
 946:	6f 92       	push	r6
 948:	7f 92       	push	r7
 94a:	8f 92       	push	r8
 94c:	9f 92       	push	r9
 94e:	af 92       	push	r10
 950:	bf 92       	push	r11
 952:	cf 92       	push	r12
 954:	df 92       	push	r13
 956:	ef 92       	push	r14
 958:	ff 92       	push	r15
 95a:	0f 93       	push	r16
 95c:	1f 93       	push	r17
 95e:	cf 93       	push	r28
 960:	df 93       	push	r29
 962:	cd b7       	in	r28, 0x3d	; 61
 964:	de b7       	in	r29, 0x3e	; 62
 966:	ca 1b       	sub	r28, r26
 968:	db 0b       	sbc	r29, r27
 96a:	0f b6       	in	r0, 0x3f	; 63
 96c:	f8 94       	cli
 96e:	de bf       	out	0x3e, r29	; 62
 970:	0f be       	out	0x3f, r0	; 63
 972:	cd bf       	out	0x3d, r28	; 61
 974:	09 94       	ijmp

00000976 <__epilogue_restores__>:
 976:	2a 88       	ldd	r2, Y+18	; 0x12
 978:	39 88       	ldd	r3, Y+17	; 0x11
 97a:	48 88       	ldd	r4, Y+16	; 0x10
 97c:	5f 84       	ldd	r5, Y+15	; 0x0f
 97e:	6e 84       	ldd	r6, Y+14	; 0x0e
 980:	7d 84       	ldd	r7, Y+13	; 0x0d
 982:	8c 84       	ldd	r8, Y+12	; 0x0c
 984:	9b 84       	ldd	r9, Y+11	; 0x0b
 986:	aa 84       	ldd	r10, Y+10	; 0x0a
 988:	b9 84       	ldd	r11, Y+9	; 0x09
 98a:	c8 84       	ldd	r12, Y+8	; 0x08
 98c:	df 80       	ldd	r13, Y+7	; 0x07
 98e:	ee 80       	ldd	r14, Y+6	; 0x06
 990:	fd 80       	ldd	r15, Y+5	; 0x05
 992:	0c 81       	ldd	r16, Y+4	; 0x04
 994:	1b 81       	ldd	r17, Y+3	; 0x03
 996:	aa 81       	ldd	r26, Y+2	; 0x02
 998:	b9 81       	ldd	r27, Y+1	; 0x01
 99a:	ce 0f       	add	r28, r30
 99c:	d1 1d       	adc	r29, r1
 99e:	0f b6       	in	r0, 0x3f	; 63
 9a0:	f8 94       	cli
 9a2:	de bf       	out	0x3e, r29	; 62
 9a4:	0f be       	out	0x3f, r0	; 63
 9a6:	cd bf       	out	0x3d, r28	; 61
 9a8:	ed 01       	movw	r28, r26
 9aa:	08 95       	ret

000009ac <_exit>:
 9ac:	f8 94       	cli

000009ae <__stop_program>:
 9ae:	ff cf       	rjmp	.-2      	; 0x9ae <__stop_program>
