
led_multiplekser.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000be6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000032  00800060  00000be6  00000c7a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000017  00800092  00800092  00000cac  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cac  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000d08  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000873  00000000  00000000  00000d78  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002ae  00000000  00000000  000015eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000383  00000000  00000000  00001899  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000190  00000000  00000000  00001c1c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002f9  00000000  00000000  00001dac  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000ae3  00000000  00000000  000020a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00002b88  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__ctors_end>
   4:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
   8:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
   c:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  10:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  14:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  18:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  1c:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  20:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  24:	0c 94 92 00 	jmp	0x124	; 0x124 <__vector_9>
  28:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  2c:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  30:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  34:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  38:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  3c:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  40:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  44:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  48:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  4c:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  50:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
  54:	65 01       	movw	r12, r10
  56:	63 01       	movw	r12, r6
  58:	6b 01       	movw	r12, r22
  5a:	21 01       	movw	r4, r2
  5c:	6d 01       	movw	r12, r26
  5e:	23 01       	movw	r4, r6
  60:	25 01       	movw	r4, r10
  62:	27 01       	movw	r4, r14
  64:	29 01       	movw	r4, r18
  66:	2b 01       	movw	r4, r22
  68:	2d 01       	movw	r4, r26
  6a:	2f 01       	movw	r4, r30
  6c:	31 01       	movw	r6, r2
  6e:	6b 01       	movw	r12, r22
  70:	6b 01       	movw	r12, r22
  72:	6b 01       	movw	r12, r22
  74:	69 01       	movw	r12, r18
  76:	6b 01       	movw	r12, r22
  78:	6b 01       	movw	r12, r22
  7a:	6b 01       	movw	r12, r22
  7c:	33 01       	movw	r6, r6
  7e:	35 01       	movw	r6, r10
  80:	39 01       	movw	r6, r18
  82:	6b 01       	movw	r12, r22
  84:	3f 01       	movw	r6, r30
  86:	41 01       	movw	r8, r2
  88:	43 01       	movw	r8, r6
  8a:	45 01       	movw	r8, r10
  8c:	6d 01       	movw	r12, r26
  8e:	4b 01       	movw	r8, r22
  90:	6b 01       	movw	r12, r22
  92:	4f 01       	movw	r8, r30
  94:	6b 01       	movw	r12, r22
  96:	6b 01       	movw	r12, r22
  98:	21 01       	movw	r4, r2
  9a:	53 01       	movw	r10, r6
  9c:	6b 01       	movw	r12, r22
  9e:	6b 01       	movw	r12, r22
  a0:	55 01       	movw	r10, r10
  a2:	57 01       	movw	r10, r14
  a4:	5b 01       	movw	r10, r22
  a6:	6b 01       	movw	r12, r22
  a8:	6b 01       	movw	r12, r22
  aa:	6b 01       	movw	r12, r22
  ac:	5f 01       	movw	r10, r30
  ae:	61 01       	movw	r12, r2
  b0:	6b 01       	movw	r12, r22
  b2:	6b 01       	movw	r12, r22
  b4:	6b 01       	movw	r12, r22
  b6:	6b 01       	movw	r12, r22
  b8:	67 01       	movw	r12, r14
  ba:	6b 01       	movw	r12, r22
  bc:	6b 01       	movw	r12, r22
  be:	37 01       	movw	r6, r14
  c0:	3b 01       	movw	r6, r22
  c2:	3d 01       	movw	r6, r26
  c4:	6b 01       	movw	r12, r22
  c6:	6b 01       	movw	r12, r22
  c8:	6b 01       	movw	r12, r22
  ca:	47 01       	movw	r8, r14
  cc:	49 01       	movw	r8, r18
  ce:	4d 01       	movw	r8, r26
  d0:	6b 01       	movw	r12, r22
  d2:	6b 01       	movw	r12, r22
  d4:	6b 01       	movw	r12, r22
  d6:	6b 01       	movw	r12, r22
  d8:	51 01       	movw	r10, r2
  da:	6b 01       	movw	r12, r22
  dc:	6b 01       	movw	r12, r22
  de:	6b 01       	movw	r12, r22
  e0:	6b 01       	movw	r12, r22
  e2:	59 01       	movw	r10, r18
  e4:	5d 01       	movw	r10, r26

000000e6 <__ctors_end>:
  e6:	11 24       	eor	r1, r1
  e8:	1f be       	out	0x3f, r1	; 63
  ea:	cf e5       	ldi	r28, 0x5F	; 95
  ec:	d4 e0       	ldi	r29, 0x04	; 4
  ee:	de bf       	out	0x3e, r29	; 62
  f0:	cd bf       	out	0x3d, r28	; 61

000000f2 <__do_copy_data>:
  f2:	10 e0       	ldi	r17, 0x00	; 0
  f4:	a0 e6       	ldi	r26, 0x60	; 96
  f6:	b0 e0       	ldi	r27, 0x00	; 0
  f8:	e6 ee       	ldi	r30, 0xE6	; 230
  fa:	fb e0       	ldi	r31, 0x0B	; 11
  fc:	02 c0       	rjmp	.+4      	; 0x102 <__do_copy_data+0x10>
  fe:	05 90       	lpm	r0, Z+
 100:	0d 92       	st	X+, r0
 102:	a2 39       	cpi	r26, 0x92	; 146
 104:	b1 07       	cpc	r27, r17
 106:	d9 f7       	brne	.-10     	; 0xfe <__do_copy_data+0xc>

00000108 <__do_clear_bss>:
 108:	20 e0       	ldi	r18, 0x00	; 0
 10a:	a2 e9       	ldi	r26, 0x92	; 146
 10c:	b0 e0       	ldi	r27, 0x00	; 0
 10e:	01 c0       	rjmp	.+2      	; 0x112 <.do_clear_bss_start>

00000110 <.do_clear_bss_loop>:
 110:	1d 92       	st	X+, r1

00000112 <.do_clear_bss_start>:
 112:	a9 3a       	cpi	r26, 0xA9	; 169
 114:	b2 07       	cpc	r27, r18
 116:	e1 f7       	brne	.-8      	; 0x110 <.do_clear_bss_loop>
 118:	0e 94 71 02 	call	0x4e2	; 0x4e2 <main>
 11c:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <_exit>

00000120 <__bad_interrupt>:
 120:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000124 <__vector_9>:
ISR(TIMER0_OVF_vect)
{
 124:	1f 92       	push	r1
 126:	0f 92       	push	r0
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	0f 92       	push	r0
 12c:	11 24       	eor	r1, r1
 12e:	2f 93       	push	r18
 130:	3f 93       	push	r19
 132:	4f 93       	push	r20
 134:	5f 93       	push	r21
 136:	6f 93       	push	r22
 138:	7f 93       	push	r23
 13a:	8f 93       	push	r24
 13c:	9f 93       	push	r25
 13e:	af 93       	push	r26
 140:	bf 93       	push	r27
 142:	ef 93       	push	r30
 144:	ff 93       	push	r31
	static volatile int src_nr = 0, counter = 0;
	
	if(counter++ == 10)
 146:	80 91 94 00 	lds	r24, 0x0094
 14a:	90 91 95 00 	lds	r25, 0x0095
 14e:	9c 01       	movw	r18, r24
 150:	2f 5f       	subi	r18, 0xFF	; 255
 152:	3f 4f       	sbci	r19, 0xFF	; 255
 154:	30 93 95 00 	sts	0x0095, r19
 158:	20 93 94 00 	sts	0x0094, r18
 15c:	0a 97       	sbiw	r24, 0x0a	; 10
 15e:	09 f0       	breq	.+2      	; 0x162 <__vector_9+0x3e>
 160:	3f c0       	rjmp	.+126    	; 0x1e0 <__vector_9+0xbc>
	{
		src_nr = (src_nr + 1) % total_displays;
 162:	80 91 92 00 	lds	r24, 0x0092
 166:	90 91 93 00 	lds	r25, 0x0093
 16a:	01 96       	adiw	r24, 0x01	; 1
 16c:	60 91 a6 00 	lds	r22, 0x00A6
 170:	70 e0       	ldi	r23, 0x00	; 0
 172:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <__divmodhi4>
 176:	90 93 93 00 	sts	0x0093, r25
 17a:	80 93 92 00 	sts	0x0092, r24
		
		*display_port = (led_type & KATODA) ? (1 << src_nr) : ~(1 << src_nr);
 17e:	e0 91 98 00 	lds	r30, 0x0098
 182:	f0 91 99 00 	lds	r31, 0x0099
 186:	80 91 96 00 	lds	r24, 0x0096
 18a:	80 ff       	sbrs	r24, 0
 18c:	0a c0       	rjmp	.+20     	; 0x1a2 <__vector_9+0x7e>
 18e:	20 91 92 00 	lds	r18, 0x0092
 192:	30 91 93 00 	lds	r19, 0x0093
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	01 c0       	rjmp	.+2      	; 0x19c <__vector_9+0x78>
 19a:	88 0f       	add	r24, r24
 19c:	2a 95       	dec	r18
 19e:	ea f7       	brpl	.-6      	; 0x19a <__vector_9+0x76>
 1a0:	0e c0       	rjmp	.+28     	; 0x1be <__vector_9+0x9a>
 1a2:	80 91 92 00 	lds	r24, 0x0092
 1a6:	90 91 93 00 	lds	r25, 0x0093
 1aa:	21 e0       	ldi	r18, 0x01	; 1
 1ac:	30 e0       	ldi	r19, 0x00	; 0
 1ae:	a9 01       	movw	r20, r18
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <__vector_9+0x92>
 1b2:	44 0f       	add	r20, r20
 1b4:	55 1f       	adc	r21, r21
 1b6:	8a 95       	dec	r24
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <__vector_9+0x8e>
 1ba:	ca 01       	movw	r24, r20
 1bc:	80 95       	com	r24
 1be:	80 83       	st	Z, r24
		*digit_port = number[src_nr];
 1c0:	e0 91 a2 00 	lds	r30, 0x00A2
 1c4:	f0 91 a3 00 	lds	r31, 0x00A3
 1c8:	a0 91 92 00 	lds	r26, 0x0092
 1cc:	b0 91 93 00 	lds	r27, 0x0093
 1d0:	a6 56       	subi	r26, 0x66	; 102
 1d2:	bf 4f       	sbci	r27, 0xFF	; 255
 1d4:	8c 91       	ld	r24, X
 1d6:	80 83       	st	Z, r24
	
		counter = 0;
 1d8:	10 92 95 00 	sts	0x0095, r1
 1dc:	10 92 94 00 	sts	0x0094, r1
	}
}
 1e0:	ff 91       	pop	r31
 1e2:	ef 91       	pop	r30
 1e4:	bf 91       	pop	r27
 1e6:	af 91       	pop	r26
 1e8:	9f 91       	pop	r25
 1ea:	8f 91       	pop	r24
 1ec:	7f 91       	pop	r23
 1ee:	6f 91       	pop	r22
 1f0:	5f 91       	pop	r21
 1f2:	4f 91       	pop	r20
 1f4:	3f 91       	pop	r19
 1f6:	2f 91       	pop	r18
 1f8:	0f 90       	pop	r0
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	0f 90       	pop	r0
 1fe:	1f 90       	pop	r1
 200:	18 95       	reti

00000202 <clearDisplay>:

void clearDisplay()
{
	int i;
	
	for(i = 0; i < total_displays; i++)
 202:	20 91 a6 00 	lds	r18, 0x00A6
 206:	30 e0       	ldi	r19, 0x00	; 0
 208:	12 16       	cp	r1, r18
 20a:	13 06       	cpc	r1, r19
 20c:	74 f4       	brge	.+28     	; 0x22a <clearDisplay+0x28>
		number[i] = (led_type & KATODA) ? ~0 : 0;
 20e:	40 91 96 00 	lds	r20, 0x0096
 212:	41 70       	andi	r20, 0x01	; 1
 214:	41 95       	neg	r20

void clearDisplay()
{
	int i;
	
	for(i = 0; i < total_displays; i++)
 216:	80 e0       	ldi	r24, 0x00	; 0
 218:	90 e0       	ldi	r25, 0x00	; 0
		number[i] = (led_type & KATODA) ? ~0 : 0;
 21a:	fc 01       	movw	r30, r24
 21c:	e6 56       	subi	r30, 0x66	; 102
 21e:	ff 4f       	sbci	r31, 0xFF	; 255
 220:	40 83       	st	Z, r20

void clearDisplay()
{
	int i;
	
	for(i = 0; i < total_displays; i++)
 222:	01 96       	adiw	r24, 0x01	; 1
 224:	82 17       	cp	r24, r18
 226:	93 07       	cpc	r25, r19
 228:	c4 f3       	brlt	.-16     	; 0x21a <clearDisplay+0x18>
 22a:	08 95       	ret

0000022c <convertChar>:

uint8_t convertChar(char s)
{
	uint8_t result = 0;
	
	switch(s)
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	fc 01       	movw	r30, r24
 230:	bd 97       	sbiw	r30, 0x2d	; 45
 232:	e9 34       	cpi	r30, 0x49	; 73
 234:	f1 05       	cpc	r31, r1
 236:	08 f0       	brcs	.+2      	; 0x23a <convertChar+0xe>
 238:	4e c0       	rjmp	.+156    	; 0x2d6 <convertChar+0xaa>
 23a:	e6 5d       	subi	r30, 0xD6	; 214
 23c:	ff 4f       	sbci	r31, 0xFF	; 255
 23e:	0c 94 06 03 	jmp	0x60c	; 0x60c <__tablejump2__>
	{
		case '0':
			result = 0b00111111;
 242:	8f e3       	ldi	r24, 0x3F	; 63
 244:	08 95       	ret
		case '1':
			result = 0b00000110;
			break;
		
		case '2':
			result = 0b01011011;
 246:	8b e5       	ldi	r24, 0x5B	; 91
			break;
 248:	08 95       	ret
		
		case '3':
			result = 0b01001111;
 24a:	8f e4       	ldi	r24, 0x4F	; 79
			break;
 24c:	08 95       	ret
		
		case '4':
			result = 0b01100110;
 24e:	86 e6       	ldi	r24, 0x66	; 102
			break;
 250:	08 95       	ret
		
		case '5':
			result = 0b01101101;
 252:	8d e6       	ldi	r24, 0x6D	; 109
			break;
 254:	08 95       	ret
		
		case '6':
			result = 0b01111101;
 256:	8d e7       	ldi	r24, 0x7D	; 125
			break;
 258:	08 95       	ret
		
		case '7':
			result = 0b00000111;
 25a:	87 e0       	ldi	r24, 0x07	; 7
			break;
 25c:	08 95       	ret
		
		case '8':
			result = 0b01111111;
 25e:	8f e7       	ldi	r24, 0x7F	; 127
			break;
 260:	08 95       	ret
		
		case '9':
			result = 0b01101111;
 262:	8f e6       	ldi	r24, 0x6F	; 111
			break;
 264:	08 95       	ret
			
		case 'A':
			result = 0b01110111;
 266:	87 e7       	ldi	r24, 0x77	; 119
			break;
 268:	08 95       	ret
		
		case 'B':
			result = 0b01111111;
 26a:	8f e7       	ldi	r24, 0x7F	; 127
			break;
 26c:	08 95       	ret
		
		case 'b':
			result = 0b01111100;
 26e:	8c e7       	ldi	r24, 0x7C	; 124
			break;
 270:	08 95       	ret
		
		case 'C':
			result = 0b111001;
 272:	89 e3       	ldi	r24, 0x39	; 57
			break;
 274:	08 95       	ret
		
		case 'c':
			result = 0b1011000;
 276:	88 e5       	ldi	r24, 0x58	; 88
			break;
 278:	08 95       	ret
		
		case 'd':
			result = 0b1011110;
 27a:	8e e5       	ldi	r24, 0x5E	; 94
			break;
 27c:	08 95       	ret
		
		case 'E':
			result = 0b1111001;
 27e:	89 e7       	ldi	r24, 0x79	; 121
			break;
 280:	08 95       	ret
		
		case 'F':
			result = 0b1110001;
 282:	81 e7       	ldi	r24, 0x71	; 113
			break;
 284:	08 95       	ret
		
		case 'G':
			result = 0b111101;
 286:	8d e3       	ldi	r24, 0x3D	; 61
			break;
 288:	08 95       	ret
		
		case 'H':
			result = 0b1110110;
 28a:	86 e7       	ldi	r24, 0x76	; 118
			break;
 28c:	08 95       	ret
		
		case 'h':
			result = 0b1110100;
 28e:	84 e7       	ldi	r24, 0x74	; 116
			break;
 290:	08 95       	ret
		case 'I':
			result = 0b110;
			break;
		
		case 'i':
			result = 0b100;
 292:	84 e0       	ldi	r24, 0x04	; 4
			break;
 294:	08 95       	ret
		
		case 'J':
			result = 0b1111;
 296:	8f e0       	ldi	r24, 0x0F	; 15
			break;
 298:	08 95       	ret
		
		case 'j':
			result = 0b1110;
 29a:	8e e0       	ldi	r24, 0x0E	; 14
			break;
 29c:	08 95       	ret
		
		case 'L':
			result = 0b111000;
 29e:	88 e3       	ldi	r24, 0x38	; 56
			break;
 2a0:	08 95       	ret
		case 'O':
			result = 0b111111;
			break;
		
		case 'o':
			result = 0b1011100;
 2a2:	8c e5       	ldi	r24, 0x5C	; 92
			break;
 2a4:	08 95       	ret
		
		case 'P':
			result = 0b1110011;
 2a6:	83 e7       	ldi	r24, 0x73	; 115
			break;
 2a8:	08 95       	ret
		
		case 'S':
			result = 0b1101101;
 2aa:	8d e6       	ldi	r24, 0x6D	; 109
			break;
 2ac:	08 95       	ret
		
		case 'T':
			result = 0b110001;
 2ae:	81 e3       	ldi	r24, 0x31	; 49
			break;
 2b0:	08 95       	ret
		
		case 't':
			result = 0b1111000;
 2b2:	88 e7       	ldi	r24, 0x78	; 120
			break;
 2b4:	08 95       	ret
		
		case 'U':
			result = 0b111110;
 2b6:	8e e3       	ldi	r24, 0x3E	; 62
			break;
 2b8:	08 95       	ret
		
		case 'u':
			result = 0b11100;
 2ba:	8c e1       	ldi	r24, 0x1C	; 28
			break;
 2bc:	08 95       	ret
		
		case 'Y':
			result = 0b1100110;
 2be:	86 e6       	ldi	r24, 0x66	; 102
			break;
 2c0:	08 95       	ret
		
		case 'Z':
			result = 0b1011011;
 2c2:	8b e5       	ldi	r24, 0x5B	; 91
			break;
 2c4:	08 95       	ret
		
		case '.':
			result = 0b10000000;
 2c6:	80 e8       	ldi	r24, 0x80	; 128
			break;
 2c8:	08 95       	ret
		
		case '-':
			result = 0b1000000;
 2ca:	80 e4       	ldi	r24, 0x40	; 64
			break;
 2cc:	08 95       	ret
		
		case '_':
			result = 0b1000;
 2ce:	88 e0       	ldi	r24, 0x08	; 8
			break;
 2d0:	08 95       	ret
		
		case '=':
			result = 0b1001000;
 2d2:	88 e4       	ldi	r24, 0x48	; 72
			break;
 2d4:	08 95       	ret
		
		default:
			result = 0;
 2d6:	80 e0       	ldi	r24, 0x00	; 0
			break;
 2d8:	08 95       	ret
		case '0':
			result = 0b00111111;
			break;
		
		case '1':
			result = 0b00000110;
 2da:	86 e0       	ldi	r24, 0x06	; 6
			result = 0;
			break;
	}
	
	return result;
}
 2dc:	08 95       	ret

000002de <LEDSetValue>:
	position = 0;
	set_timer0();
}

void LEDSetValue(char *val)
{
 2de:	9f 92       	push	r9
 2e0:	af 92       	push	r10
 2e2:	bf 92       	push	r11
 2e4:	cf 92       	push	r12
 2e6:	df 92       	push	r13
 2e8:	ef 92       	push	r14
 2ea:	ff 92       	push	r15
 2ec:	0f 93       	push	r16
 2ee:	1f 93       	push	r17
 2f0:	cf 93       	push	r28
 2f2:	df 93       	push	r29
 2f4:	fc 01       	movw	r30, r24
	int i;
	
	for(i = 0; i < total_displays; i++)
 2f6:	00 91 a6 00 	lds	r16, 0x00A6
 2fa:	10 e0       	ldi	r17, 0x00	; 0
 2fc:	10 16       	cp	r1, r16
 2fe:	11 06       	cpc	r1, r17
 300:	7c f5       	brge	.+94     	; 0x360 <LEDSetValue+0x82>
	{
		if(val[i] == '\0')
 302:	20 81       	ld	r18, Z
 304:	22 23       	and	r18, r18
 306:	61 f1       	breq	.+88     	; 0x360 <LEDSetValue+0x82>
			break;
		
		number[(i + position) % total_displays] = (led_type & KATODA) ? ~convertChar(val[i]) : convertChar(val[i]);
 308:	a0 90 97 00 	lds	r10, 0x0097
 30c:	80 91 96 00 	lds	r24, 0x0096
 310:	81 70       	andi	r24, 0x01	; 1
 312:	98 2e       	mov	r9, r24
 314:	6f 01       	movw	r12, r30
 316:	8f ef       	ldi	r24, 0xFF	; 255
 318:	c8 1a       	sub	r12, r24
 31a:	d8 0a       	sbc	r13, r24

void LEDSetValue(char *val)
{
	int i;
	
	for(i = 0; i < total_displays; i++)
 31c:	c0 e0       	ldi	r28, 0x00	; 0
 31e:	d0 e0       	ldi	r29, 0x00	; 0
 320:	b1 2c       	mov	r11, r1
 322:	05 c0       	rjmp	.+10     	; 0x32e <LEDSetValue+0x50>
	{
		if(val[i] == '\0')
 324:	f6 01       	movw	r30, r12
 326:	21 91       	ld	r18, Z+
 328:	6f 01       	movw	r12, r30
 32a:	22 23       	and	r18, r18
 32c:	c9 f0       	breq	.+50     	; 0x360 <LEDSetValue+0x82>
 32e:	ce 01       	movw	r24, r28
 330:	8a 0d       	add	r24, r10
 332:	9b 1d       	adc	r25, r11
			break;
		
		number[(i + position) % total_displays] = (led_type & KATODA) ? ~convertChar(val[i]) : convertChar(val[i]);
 334:	b8 01       	movw	r22, r16
 336:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <__divmodhi4>
 33a:	7c 01       	movw	r14, r24
 33c:	99 20       	and	r9, r9
 33e:	29 f0       	breq	.+10     	; 0x34a <LEDSetValue+0x6c>
 340:	82 2f       	mov	r24, r18
 342:	0e 94 16 01 	call	0x22c	; 0x22c <convertChar>
 346:	80 95       	com	r24
 348:	03 c0       	rjmp	.+6      	; 0x350 <LEDSetValue+0x72>
 34a:	82 2f       	mov	r24, r18
 34c:	0e 94 16 01 	call	0x22c	; 0x22c <convertChar>
 350:	f7 01       	movw	r30, r14
 352:	e6 56       	subi	r30, 0x66	; 102
 354:	ff 4f       	sbci	r31, 0xFF	; 255
 356:	80 83       	st	Z, r24

void LEDSetValue(char *val)
{
	int i;
	
	for(i = 0; i < total_displays; i++)
 358:	21 96       	adiw	r28, 0x01	; 1
 35a:	c0 17       	cp	r28, r16
 35c:	d1 07       	cpc	r29, r17
 35e:	14 f3       	brlt	.-60     	; 0x324 <LEDSetValue+0x46>
		if(val[i] == '\0')
			break;
		
		number[(i + position) % total_displays] = (led_type & KATODA) ? ~convertChar(val[i]) : convertChar(val[i]);
	}
}
 360:	df 91       	pop	r29
 362:	cf 91       	pop	r28
 364:	1f 91       	pop	r17
 366:	0f 91       	pop	r16
 368:	ff 90       	pop	r15
 36a:	ef 90       	pop	r14
 36c:	df 90       	pop	r13
 36e:	cf 90       	pop	r12
 370:	bf 90       	pop	r11
 372:	af 90       	pop	r10
 374:	9f 90       	pop	r9
 376:	08 95       	ret

00000378 <LEDSetNumber>:
{
	position = pos % MAX_NUM_DISPLAY;
}

void LEDSetNumber(int nr)
{
 378:	0f 93       	push	r16
 37a:	1f 93       	push	r17
 37c:	cf 93       	push	r28
 37e:	df 93       	push	r29
 380:	cd b7       	in	r28, 0x3d	; 61
 382:	de b7       	in	r29, 0x3e	; 62
 384:	29 97       	sbiw	r28, 0x09	; 9
 386:	0f b6       	in	r0, 0x3f	; 63
 388:	f8 94       	cli
 38a:	de bf       	out	0x3e, r29	; 62
 38c:	0f be       	out	0x3f, r0	; 63
 38e:	cd bf       	out	0x3d, r28	; 61
	char s[MAX_NUM_DISPLAY + 1]; // +1 end char
	sprintf(s, "%d\0", nr);
 390:	9f 93       	push	r25
 392:	8f 93       	push	r24
 394:	80 e6       	ldi	r24, 0x60	; 96
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	9f 93       	push	r25
 39a:	8f 93       	push	r24
 39c:	8e 01       	movw	r16, r28
 39e:	0f 5f       	subi	r16, 0xFF	; 255
 3a0:	1f 4f       	sbci	r17, 0xFF	; 255
 3a2:	1f 93       	push	r17
 3a4:	0f 93       	push	r16
 3a6:	0e 94 20 03 	call	0x640	; 0x640 <sprintf>
	LEDSetValue(s);
 3aa:	c8 01       	movw	r24, r16
 3ac:	0e 94 6f 01 	call	0x2de	; 0x2de <LEDSetValue>
 3b0:	0f 90       	pop	r0
 3b2:	0f 90       	pop	r0
 3b4:	0f 90       	pop	r0
 3b6:	0f 90       	pop	r0
 3b8:	0f 90       	pop	r0
 3ba:	0f 90       	pop	r0
}
 3bc:	29 96       	adiw	r28, 0x09	; 9
 3be:	0f b6       	in	r0, 0x3f	; 63
 3c0:	f8 94       	cli
 3c2:	de bf       	out	0x3e, r29	; 62
 3c4:	0f be       	out	0x3f, r0	; 63
 3c6:	cd bf       	out	0x3d, r28	; 61
 3c8:	df 91       	pop	r29
 3ca:	cf 91       	pop	r28
 3cc:	1f 91       	pop	r17
 3ce:	0f 91       	pop	r16
 3d0:	08 95       	ret

000003d2 <set_timer0>:
	return result;
}

void set_timer0()
{
	TCCR0 = 1 << CS01;
 3d2:	82 e0       	ldi	r24, 0x02	; 2
 3d4:	83 bf       	out	0x33, r24	; 51
	TIMSK |= 1 << TOIE0;
 3d6:	89 b7       	in	r24, 0x39	; 57
 3d8:	81 60       	ori	r24, 0x01	; 1
 3da:	89 bf       	out	0x39, r24	; 57
 3dc:	08 95       	ret

000003de <LEDInit>:
		counter = 0;
	}
}

void LEDInit(uint8_t total_displays_f, uint8_t led_type_f, volatile uint8_t *digit_ddr_wsk, volatile uint8_t *digit_port_wsk, volatile uint8_t *display_ddr_wsk, volatile uint8_t *display_port_wsk)
{
 3de:	ef 92       	push	r14
 3e0:	ff 92       	push	r15
 3e2:	0f 93       	push	r16
 3e4:	1f 93       	push	r17
	total_displays = total_displays_f;
 3e6:	80 93 a6 00 	sts	0x00A6, r24
	led_type = led_type_f % 2;
 3ea:	61 70       	andi	r22, 0x01	; 1
 3ec:	60 93 96 00 	sts	0x0096, r22
	digit_ddr = digit_ddr_wsk;
 3f0:	50 93 a8 00 	sts	0x00A8, r21
 3f4:	40 93 a7 00 	sts	0x00A7, r20
	digit_port = digit_port_wsk;
 3f8:	30 93 a3 00 	sts	0x00A3, r19
 3fc:	20 93 a2 00 	sts	0x00A2, r18
	display_ddr = display_ddr_wsk;
 400:	10 93 a5 00 	sts	0x00A5, r17
 404:	00 93 a4 00 	sts	0x00A4, r16
	display_port = display_port_wsk;
 408:	f0 92 99 00 	sts	0x0099, r15
 40c:	e0 92 98 00 	sts	0x0098, r14
	
	*digit_ddr = 0xFF;
 410:	8f ef       	ldi	r24, 0xFF	; 255
 412:	fa 01       	movw	r30, r20
 414:	80 83       	st	Z, r24
	*digit_port = 0;
 416:	e0 91 a2 00 	lds	r30, 0x00A2
 41a:	f0 91 a3 00 	lds	r31, 0x00A3
 41e:	10 82       	st	Z, r1
	*display_ddr = 0;
 420:	e0 91 a4 00 	lds	r30, 0x00A4
 424:	f0 91 a5 00 	lds	r31, 0x00A5
 428:	10 82       	st	Z, r1
	*display_port = 0xFF;
 42a:	e0 91 98 00 	lds	r30, 0x0098
 42e:	f0 91 99 00 	lds	r31, 0x0099
 432:	80 83       	st	Z, r24
	
	int i;
	for(i = 0; i < total_displays; i++)
 434:	80 91 a6 00 	lds	r24, 0x00A6
 438:	88 23       	and	r24, r24
 43a:	c9 f0       	breq	.+50     	; 0x46e <__stack+0xf>
 43c:	80 e0       	ldi	r24, 0x00	; 0
 43e:	90 e0       	ldi	r25, 0x00	; 0
	{
		*display_ddr |= (1 << i);
 440:	41 e0       	ldi	r20, 0x01	; 1
 442:	50 e0       	ldi	r21, 0x00	; 0
 444:	e0 91 a4 00 	lds	r30, 0x00A4
 448:	f0 91 a5 00 	lds	r31, 0x00A5
 44c:	60 81       	ld	r22, Z
 44e:	9a 01       	movw	r18, r20
 450:	08 2e       	mov	r0, r24
 452:	02 c0       	rjmp	.+4      	; 0x458 <LEDInit+0x7a>
 454:	22 0f       	add	r18, r18
 456:	33 1f       	adc	r19, r19
 458:	0a 94       	dec	r0
 45a:	e2 f7       	brpl	.-8      	; 0x454 <LEDInit+0x76>
 45c:	26 2b       	or	r18, r22
 45e:	20 83       	st	Z, r18
	*digit_port = 0;
	*display_ddr = 0;
	*display_port = 0xFF;
	
	int i;
	for(i = 0; i < total_displays; i++)
 460:	01 96       	adiw	r24, 0x01	; 1
 462:	20 91 a6 00 	lds	r18, 0x00A6
 466:	30 e0       	ldi	r19, 0x00	; 0
 468:	82 17       	cp	r24, r18
 46a:	93 07       	cpc	r25, r19
 46c:	5c f3       	brlt	.-42     	; 0x444 <LEDInit+0x66>
	{
		*display_ddr |= (1 << i);
	}
	
	position = 0;
 46e:	10 92 97 00 	sts	0x0097, r1
	set_timer0();
 472:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <set_timer0>
}
 476:	1f 91       	pop	r17
 478:	0f 91       	pop	r16
 47a:	ff 90       	pop	r15
 47c:	ef 90       	pop	r14
 47e:	08 95       	ret

00000480 <LEDDot>:
	TCCR0 = 1 << CS01;
	TIMSK |= 1 << TOIE0;
}

void LEDDot(uint8_t dot)
{
 480:	cf 93       	push	r28
 482:	df 93       	push	r29
	uint8_t result;
	
	result = (led_type & KATODA) ? ~number[position] : number[position];
 484:	90 91 96 00 	lds	r25, 0x0096
 488:	c9 2f       	mov	r28, r25
 48a:	c1 70       	andi	r28, 0x01	; 1
 48c:	90 ff       	sbrs	r25, 0
 48e:	08 c0       	rjmp	.+16     	; 0x4a0 <LEDDot+0x20>
 490:	e0 91 97 00 	lds	r30, 0x0097
 494:	f0 e0       	ldi	r31, 0x00	; 0
 496:	e6 56       	subi	r30, 0x66	; 102
 498:	ff 4f       	sbci	r31, 0xFF	; 255
 49a:	d0 81       	ld	r29, Z
 49c:	d0 95       	com	r29
 49e:	06 c0       	rjmp	.+12     	; 0x4ac <LEDDot+0x2c>
 4a0:	e0 91 97 00 	lds	r30, 0x0097
 4a4:	f0 e0       	ldi	r31, 0x00	; 0
 4a6:	e6 56       	subi	r30, 0x66	; 102
 4a8:	ff 4f       	sbci	r31, 0xFF	; 255
 4aa:	d0 81       	ld	r29, Z
	
	if(dot == DEL_DOT)
 4ac:	81 11       	cpse	r24, r1
 4ae:	06 c0       	rjmp	.+12     	; 0x4bc <LEDDot+0x3c>
	{
		result &= ~convertChar('.');
 4b0:	8e e2       	ldi	r24, 0x2E	; 46
 4b2:	0e 94 16 01 	call	0x22c	; 0x22c <convertChar>
 4b6:	80 95       	com	r24
 4b8:	8d 23       	and	r24, r29
 4ba:	04 c0       	rjmp	.+8      	; 0x4c4 <LEDDot+0x44>
	}
	else
	{
		result |= convertChar('.');
 4bc:	8e e2       	ldi	r24, 0x2E	; 46
 4be:	0e 94 16 01 	call	0x22c	; 0x22c <convertChar>
 4c2:	8d 2b       	or	r24, r29
	}
	
	number[position] = (led_type & KATODA) ? ~result : result;
 4c4:	e0 91 97 00 	lds	r30, 0x0097
 4c8:	f0 e0       	ldi	r31, 0x00	; 0
 4ca:	cc 23       	and	r28, r28
 4cc:	19 f0       	breq	.+6      	; 0x4d4 <LEDDot+0x54>
 4ce:	d8 2f       	mov	r29, r24
 4d0:	d0 95       	com	r29
 4d2:	01 c0       	rjmp	.+2      	; 0x4d6 <LEDDot+0x56>
 4d4:	d8 2f       	mov	r29, r24
 4d6:	e6 56       	subi	r30, 0x66	; 102
 4d8:	ff 4f       	sbci	r31, 0xFF	; 255
 4da:	d0 83       	st	Z, r29
 4dc:	df 91       	pop	r29
 4de:	cf 91       	pop	r28
 4e0:	08 95       	ret

000004e2 <main>:
#include <avr/interrupt.h>
#include <util/delay.h>

int main(void)
{
	LEDInit(6, 1, &DDRD, &PORTD, &DDRC, &PORTC);
 4e2:	0f 2e       	mov	r0, r31
 4e4:	f5 e3       	ldi	r31, 0x35	; 53
 4e6:	ef 2e       	mov	r14, r31
 4e8:	f1 2c       	mov	r15, r1
 4ea:	f0 2d       	mov	r31, r0
 4ec:	04 e3       	ldi	r16, 0x34	; 52
 4ee:	10 e0       	ldi	r17, 0x00	; 0
 4f0:	22 e3       	ldi	r18, 0x32	; 50
 4f2:	30 e0       	ldi	r19, 0x00	; 0
 4f4:	41 e3       	ldi	r20, 0x31	; 49
 4f6:	50 e0       	ldi	r21, 0x00	; 0
 4f8:	61 e0       	ldi	r22, 0x01	; 1
 4fa:	86 e0       	ldi	r24, 0x06	; 6
 4fc:	0e 94 ef 01 	call	0x3de	; 0x3de <LEDInit>
	
	sei();
 500:	78 94       	sei
	
	LEDSetNumber(32);
 502:	80 e2       	ldi	r24, 0x20	; 32
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	0e 94 bc 01 	call	0x378	; 0x378 <LEDSetNumber>
	clearDisplay();
 50a:	0e 94 01 01 	call	0x202	; 0x202 <clearDisplay>
	LEDSetValue("7 312");
 50e:	89 e6       	ldi	r24, 0x69	; 105
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	0e 94 6f 01 	call	0x2de	; 0x2de <LEDSetValue>
	}
}

void LEDSetPosition(uint8_t pos)
{
	position = pos % MAX_NUM_DISPLAY;
 516:	82 e0       	ldi	r24, 0x02	; 2
 518:	80 93 97 00 	sts	0x0097, r24
	LEDSetPosition(2);
	
	LEDDot(PUT_DOT);
 51c:	81 e0       	ldi	r24, 0x01	; 1
 51e:	0e 94 40 02 	call	0x480	; 0x480 <LEDDot>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 522:	2f ef       	ldi	r18, 0xFF	; 255
 524:	83 ed       	ldi	r24, 0xD3	; 211
 526:	90 e3       	ldi	r25, 0x30	; 48
 528:	21 50       	subi	r18, 0x01	; 1
 52a:	80 40       	sbci	r24, 0x00	; 0
 52c:	90 40       	sbci	r25, 0x00	; 0
 52e:	e1 f7       	brne	.-8      	; 0x528 <main+0x46>
 530:	00 c0       	rjmp	.+0      	; 0x532 <main+0x50>
 532:	00 00       	nop
	_delay_ms(2000);
	
	LEDDot(DEL_DOT);
 534:	80 e0       	ldi	r24, 0x00	; 0
 536:	0e 94 40 02 	call	0x480	; 0x480 <LEDDot>
 53a:	2f ef       	ldi	r18, 0xFF	; 255
 53c:	83 ed       	ldi	r24, 0xD3	; 211
 53e:	90 e3       	ldi	r25, 0x30	; 48
 540:	21 50       	subi	r18, 0x01	; 1
 542:	80 40       	sbci	r24, 0x00	; 0
 544:	90 40       	sbci	r25, 0x00	; 0
 546:	e1 f7       	brne	.-8      	; 0x540 <main+0x5e>
 548:	00 c0       	rjmp	.+0      	; 0x54a <main+0x68>
 54a:	00 00       	nop
    
	while(1)
    {
		int static a = 0;
			
		clearDisplay();	
 54c:	0e 94 01 01 	call	0x202	; 0x202 <clearDisplay>
		LEDSetValue("ABbCcd");
 550:	8f e6       	ldi	r24, 0x6F	; 111
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	0e 94 6f 01 	call	0x2de	; 0x2de <LEDSetValue>
 558:	2f ef       	ldi	r18, 0xFF	; 255
 55a:	81 e1       	ldi	r24, 0x11	; 17
 55c:	9a e7       	ldi	r25, 0x7A	; 122
 55e:	21 50       	subi	r18, 0x01	; 1
 560:	80 40       	sbci	r24, 0x00	; 0
 562:	90 40       	sbci	r25, 0x00	; 0
 564:	e1 f7       	brne	.-8      	; 0x55e <main+0x7c>
 566:	00 c0       	rjmp	.+0      	; 0x568 <main+0x86>
 568:	00 00       	nop
		_delay_ms(5000);
		
		clearDisplay();
 56a:	0e 94 01 01 	call	0x202	; 0x202 <clearDisplay>
		LEDSetValue("EFGHhI");
 56e:	86 e7       	ldi	r24, 0x76	; 118
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	0e 94 6f 01 	call	0x2de	; 0x2de <LEDSetValue>
 576:	2f ef       	ldi	r18, 0xFF	; 255
 578:	81 e1       	ldi	r24, 0x11	; 17
 57a:	9a e7       	ldi	r25, 0x7A	; 122
 57c:	21 50       	subi	r18, 0x01	; 1
 57e:	80 40       	sbci	r24, 0x00	; 0
 580:	90 40       	sbci	r25, 0x00	; 0
 582:	e1 f7       	brne	.-8      	; 0x57c <main+0x9a>
 584:	00 c0       	rjmp	.+0      	; 0x586 <main+0xa4>
 586:	00 00       	nop
		_delay_ms(5000);
		
		clearDisplay();
 588:	0e 94 01 01 	call	0x202	; 0x202 <clearDisplay>
		LEDSetValue("iJjLOo");
 58c:	8d e7       	ldi	r24, 0x7D	; 125
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	0e 94 6f 01 	call	0x2de	; 0x2de <LEDSetValue>
 594:	2f ef       	ldi	r18, 0xFF	; 255
 596:	81 e1       	ldi	r24, 0x11	; 17
 598:	9a e7       	ldi	r25, 0x7A	; 122
 59a:	21 50       	subi	r18, 0x01	; 1
 59c:	80 40       	sbci	r24, 0x00	; 0
 59e:	90 40       	sbci	r25, 0x00	; 0
 5a0:	e1 f7       	brne	.-8      	; 0x59a <main+0xb8>
 5a2:	00 c0       	rjmp	.+0      	; 0x5a4 <main+0xc2>
 5a4:	00 00       	nop
		_delay_ms(5000);
		
		clearDisplay();
 5a6:	0e 94 01 01 	call	0x202	; 0x202 <clearDisplay>
		LEDSetValue("PSTtUu");
 5aa:	84 e8       	ldi	r24, 0x84	; 132
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	0e 94 6f 01 	call	0x2de	; 0x2de <LEDSetValue>
 5b2:	2f ef       	ldi	r18, 0xFF	; 255
 5b4:	81 e1       	ldi	r24, 0x11	; 17
 5b6:	9a e7       	ldi	r25, 0x7A	; 122
 5b8:	21 50       	subi	r18, 0x01	; 1
 5ba:	80 40       	sbci	r24, 0x00	; 0
 5bc:	90 40       	sbci	r25, 0x00	; 0
 5be:	e1 f7       	brne	.-8      	; 0x5b8 <main+0xd6>
 5c0:	00 c0       	rjmp	.+0      	; 0x5c2 <main+0xe0>
 5c2:	00 00       	nop
		_delay_ms(5000);
		
		clearDisplay();
 5c4:	0e 94 01 01 	call	0x202	; 0x202 <clearDisplay>
		LEDSetValue("YZ_-.=");
 5c8:	8b e8       	ldi	r24, 0x8B	; 139
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	0e 94 6f 01 	call	0x2de	; 0x2de <LEDSetValue>
 5d0:	2f ef       	ldi	r18, 0xFF	; 255
 5d2:	81 e1       	ldi	r24, 0x11	; 17
 5d4:	9a e7       	ldi	r25, 0x7A	; 122
 5d6:	21 50       	subi	r18, 0x01	; 1
 5d8:	80 40       	sbci	r24, 0x00	; 0
 5da:	90 40       	sbci	r25, 0x00	; 0
 5dc:	e1 f7       	brne	.-8      	; 0x5d6 <main+0xf4>
 5de:	00 c0       	rjmp	.+0      	; 0x5e0 <main+0xfe>
 5e0:	00 00       	nop
 5e2:	b4 cf       	rjmp	.-152    	; 0x54c <main+0x6a>

000005e4 <__divmodhi4>:
 5e4:	97 fb       	bst	r25, 7
 5e6:	07 2e       	mov	r0, r23
 5e8:	16 f4       	brtc	.+4      	; 0x5ee <__divmodhi4+0xa>
 5ea:	00 94       	com	r0
 5ec:	07 d0       	rcall	.+14     	; 0x5fc <__divmodhi4_neg1>
 5ee:	77 fd       	sbrc	r23, 7
 5f0:	09 d0       	rcall	.+18     	; 0x604 <__divmodhi4_neg2>
 5f2:	0e 94 0c 03 	call	0x618	; 0x618 <__udivmodhi4>
 5f6:	07 fc       	sbrc	r0, 7
 5f8:	05 d0       	rcall	.+10     	; 0x604 <__divmodhi4_neg2>
 5fa:	3e f4       	brtc	.+14     	; 0x60a <__divmodhi4_exit>

000005fc <__divmodhi4_neg1>:
 5fc:	90 95       	com	r25
 5fe:	81 95       	neg	r24
 600:	9f 4f       	sbci	r25, 0xFF	; 255
 602:	08 95       	ret

00000604 <__divmodhi4_neg2>:
 604:	70 95       	com	r23
 606:	61 95       	neg	r22
 608:	7f 4f       	sbci	r23, 0xFF	; 255

0000060a <__divmodhi4_exit>:
 60a:	08 95       	ret

0000060c <__tablejump2__>:
 60c:	ee 0f       	add	r30, r30
 60e:	ff 1f       	adc	r31, r31

00000610 <__tablejump__>:
 610:	05 90       	lpm	r0, Z+
 612:	f4 91       	lpm	r31, Z
 614:	e0 2d       	mov	r30, r0
 616:	09 94       	ijmp

00000618 <__udivmodhi4>:
 618:	aa 1b       	sub	r26, r26
 61a:	bb 1b       	sub	r27, r27
 61c:	51 e1       	ldi	r21, 0x11	; 17
 61e:	07 c0       	rjmp	.+14     	; 0x62e <__udivmodhi4_ep>

00000620 <__udivmodhi4_loop>:
 620:	aa 1f       	adc	r26, r26
 622:	bb 1f       	adc	r27, r27
 624:	a6 17       	cp	r26, r22
 626:	b7 07       	cpc	r27, r23
 628:	10 f0       	brcs	.+4      	; 0x62e <__udivmodhi4_ep>
 62a:	a6 1b       	sub	r26, r22
 62c:	b7 0b       	sbc	r27, r23

0000062e <__udivmodhi4_ep>:
 62e:	88 1f       	adc	r24, r24
 630:	99 1f       	adc	r25, r25
 632:	5a 95       	dec	r21
 634:	a9 f7       	brne	.-22     	; 0x620 <__udivmodhi4_loop>
 636:	80 95       	com	r24
 638:	90 95       	com	r25
 63a:	bc 01       	movw	r22, r24
 63c:	cd 01       	movw	r24, r26
 63e:	08 95       	ret

00000640 <sprintf>:
 640:	ae e0       	ldi	r26, 0x0E	; 14
 642:	b0 e0       	ldi	r27, 0x00	; 0
 644:	e6 e2       	ldi	r30, 0x26	; 38
 646:	f3 e0       	ldi	r31, 0x03	; 3
 648:	0c 94 c8 05 	jmp	0xb90	; 0xb90 <__prologue_saves__+0x1c>
 64c:	0d 89       	ldd	r16, Y+21	; 0x15
 64e:	1e 89       	ldd	r17, Y+22	; 0x16
 650:	86 e0       	ldi	r24, 0x06	; 6
 652:	8c 83       	std	Y+4, r24	; 0x04
 654:	1a 83       	std	Y+2, r17	; 0x02
 656:	09 83       	std	Y+1, r16	; 0x01
 658:	8f ef       	ldi	r24, 0xFF	; 255
 65a:	9f e7       	ldi	r25, 0x7F	; 127
 65c:	9e 83       	std	Y+6, r25	; 0x06
 65e:	8d 83       	std	Y+5, r24	; 0x05
 660:	ae 01       	movw	r20, r28
 662:	47 5e       	subi	r20, 0xE7	; 231
 664:	5f 4f       	sbci	r21, 0xFF	; 255
 666:	6f 89       	ldd	r22, Y+23	; 0x17
 668:	78 8d       	ldd	r23, Y+24	; 0x18
 66a:	ce 01       	movw	r24, r28
 66c:	01 96       	adiw	r24, 0x01	; 1
 66e:	0e 94 42 03 	call	0x684	; 0x684 <vfprintf>
 672:	ef 81       	ldd	r30, Y+7	; 0x07
 674:	f8 85       	ldd	r31, Y+8	; 0x08
 676:	e0 0f       	add	r30, r16
 678:	f1 1f       	adc	r31, r17
 67a:	10 82       	st	Z, r1
 67c:	2e 96       	adiw	r28, 0x0e	; 14
 67e:	e4 e0       	ldi	r30, 0x04	; 4
 680:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <__epilogue_restores__+0x1c>

00000684 <vfprintf>:
 684:	ac e0       	ldi	r26, 0x0C	; 12
 686:	b0 e0       	ldi	r27, 0x00	; 0
 688:	e8 e4       	ldi	r30, 0x48	; 72
 68a:	f3 e0       	ldi	r31, 0x03	; 3
 68c:	0c 94 ba 05 	jmp	0xb74	; 0xb74 <__prologue_saves__>
 690:	7c 01       	movw	r14, r24
 692:	6b 01       	movw	r12, r22
 694:	8a 01       	movw	r16, r20
 696:	fc 01       	movw	r30, r24
 698:	17 82       	std	Z+7, r1	; 0x07
 69a:	16 82       	std	Z+6, r1	; 0x06
 69c:	83 81       	ldd	r24, Z+3	; 0x03
 69e:	81 ff       	sbrs	r24, 1
 6a0:	bd c1       	rjmp	.+890    	; 0xa1c <vfprintf+0x398>
 6a2:	ce 01       	movw	r24, r28
 6a4:	01 96       	adiw	r24, 0x01	; 1
 6a6:	4c 01       	movw	r8, r24
 6a8:	f7 01       	movw	r30, r14
 6aa:	93 81       	ldd	r25, Z+3	; 0x03
 6ac:	f6 01       	movw	r30, r12
 6ae:	93 fd       	sbrc	r25, 3
 6b0:	85 91       	lpm	r24, Z+
 6b2:	93 ff       	sbrs	r25, 3
 6b4:	81 91       	ld	r24, Z+
 6b6:	6f 01       	movw	r12, r30
 6b8:	88 23       	and	r24, r24
 6ba:	09 f4       	brne	.+2      	; 0x6be <vfprintf+0x3a>
 6bc:	ab c1       	rjmp	.+854    	; 0xa14 <vfprintf+0x390>
 6be:	85 32       	cpi	r24, 0x25	; 37
 6c0:	39 f4       	brne	.+14     	; 0x6d0 <vfprintf+0x4c>
 6c2:	93 fd       	sbrc	r25, 3
 6c4:	85 91       	lpm	r24, Z+
 6c6:	93 ff       	sbrs	r25, 3
 6c8:	81 91       	ld	r24, Z+
 6ca:	6f 01       	movw	r12, r30
 6cc:	85 32       	cpi	r24, 0x25	; 37
 6ce:	29 f4       	brne	.+10     	; 0x6da <vfprintf+0x56>
 6d0:	b7 01       	movw	r22, r14
 6d2:	90 e0       	ldi	r25, 0x00	; 0
 6d4:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 6d8:	e7 cf       	rjmp	.-50     	; 0x6a8 <vfprintf+0x24>
 6da:	51 2c       	mov	r5, r1
 6dc:	31 2c       	mov	r3, r1
 6de:	20 e0       	ldi	r18, 0x00	; 0
 6e0:	20 32       	cpi	r18, 0x20	; 32
 6e2:	a0 f4       	brcc	.+40     	; 0x70c <vfprintf+0x88>
 6e4:	8b 32       	cpi	r24, 0x2B	; 43
 6e6:	69 f0       	breq	.+26     	; 0x702 <vfprintf+0x7e>
 6e8:	30 f4       	brcc	.+12     	; 0x6f6 <vfprintf+0x72>
 6ea:	80 32       	cpi	r24, 0x20	; 32
 6ec:	59 f0       	breq	.+22     	; 0x704 <vfprintf+0x80>
 6ee:	83 32       	cpi	r24, 0x23	; 35
 6f0:	69 f4       	brne	.+26     	; 0x70c <vfprintf+0x88>
 6f2:	20 61       	ori	r18, 0x10	; 16
 6f4:	2c c0       	rjmp	.+88     	; 0x74e <vfprintf+0xca>
 6f6:	8d 32       	cpi	r24, 0x2D	; 45
 6f8:	39 f0       	breq	.+14     	; 0x708 <vfprintf+0x84>
 6fa:	80 33       	cpi	r24, 0x30	; 48
 6fc:	39 f4       	brne	.+14     	; 0x70c <vfprintf+0x88>
 6fe:	21 60       	ori	r18, 0x01	; 1
 700:	26 c0       	rjmp	.+76     	; 0x74e <vfprintf+0xca>
 702:	22 60       	ori	r18, 0x02	; 2
 704:	24 60       	ori	r18, 0x04	; 4
 706:	23 c0       	rjmp	.+70     	; 0x74e <vfprintf+0xca>
 708:	28 60       	ori	r18, 0x08	; 8
 70a:	21 c0       	rjmp	.+66     	; 0x74e <vfprintf+0xca>
 70c:	27 fd       	sbrc	r18, 7
 70e:	27 c0       	rjmp	.+78     	; 0x75e <vfprintf+0xda>
 710:	30 ed       	ldi	r19, 0xD0	; 208
 712:	38 0f       	add	r19, r24
 714:	3a 30       	cpi	r19, 0x0A	; 10
 716:	78 f4       	brcc	.+30     	; 0x736 <vfprintf+0xb2>
 718:	26 ff       	sbrs	r18, 6
 71a:	06 c0       	rjmp	.+12     	; 0x728 <vfprintf+0xa4>
 71c:	fa e0       	ldi	r31, 0x0A	; 10
 71e:	5f 9e       	mul	r5, r31
 720:	30 0d       	add	r19, r0
 722:	11 24       	eor	r1, r1
 724:	53 2e       	mov	r5, r19
 726:	13 c0       	rjmp	.+38     	; 0x74e <vfprintf+0xca>
 728:	8a e0       	ldi	r24, 0x0A	; 10
 72a:	38 9e       	mul	r3, r24
 72c:	30 0d       	add	r19, r0
 72e:	11 24       	eor	r1, r1
 730:	33 2e       	mov	r3, r19
 732:	20 62       	ori	r18, 0x20	; 32
 734:	0c c0       	rjmp	.+24     	; 0x74e <vfprintf+0xca>
 736:	8e 32       	cpi	r24, 0x2E	; 46
 738:	21 f4       	brne	.+8      	; 0x742 <vfprintf+0xbe>
 73a:	26 fd       	sbrc	r18, 6
 73c:	6b c1       	rjmp	.+726    	; 0xa14 <vfprintf+0x390>
 73e:	20 64       	ori	r18, 0x40	; 64
 740:	06 c0       	rjmp	.+12     	; 0x74e <vfprintf+0xca>
 742:	8c 36       	cpi	r24, 0x6C	; 108
 744:	11 f4       	brne	.+4      	; 0x74a <vfprintf+0xc6>
 746:	20 68       	ori	r18, 0x80	; 128
 748:	02 c0       	rjmp	.+4      	; 0x74e <vfprintf+0xca>
 74a:	88 36       	cpi	r24, 0x68	; 104
 74c:	41 f4       	brne	.+16     	; 0x75e <vfprintf+0xda>
 74e:	f6 01       	movw	r30, r12
 750:	93 fd       	sbrc	r25, 3
 752:	85 91       	lpm	r24, Z+
 754:	93 ff       	sbrs	r25, 3
 756:	81 91       	ld	r24, Z+
 758:	6f 01       	movw	r12, r30
 75a:	81 11       	cpse	r24, r1
 75c:	c1 cf       	rjmp	.-126    	; 0x6e0 <vfprintf+0x5c>
 75e:	98 2f       	mov	r25, r24
 760:	9f 7d       	andi	r25, 0xDF	; 223
 762:	95 54       	subi	r25, 0x45	; 69
 764:	93 30       	cpi	r25, 0x03	; 3
 766:	28 f4       	brcc	.+10     	; 0x772 <vfprintf+0xee>
 768:	0c 5f       	subi	r16, 0xFC	; 252
 76a:	1f 4f       	sbci	r17, 0xFF	; 255
 76c:	ff e3       	ldi	r31, 0x3F	; 63
 76e:	f9 83       	std	Y+1, r31	; 0x01
 770:	0d c0       	rjmp	.+26     	; 0x78c <vfprintf+0x108>
 772:	83 36       	cpi	r24, 0x63	; 99
 774:	31 f0       	breq	.+12     	; 0x782 <vfprintf+0xfe>
 776:	83 37       	cpi	r24, 0x73	; 115
 778:	71 f0       	breq	.+28     	; 0x796 <vfprintf+0x112>
 77a:	83 35       	cpi	r24, 0x53	; 83
 77c:	09 f0       	breq	.+2      	; 0x780 <vfprintf+0xfc>
 77e:	5b c0       	rjmp	.+182    	; 0x836 <vfprintf+0x1b2>
 780:	22 c0       	rjmp	.+68     	; 0x7c6 <vfprintf+0x142>
 782:	f8 01       	movw	r30, r16
 784:	80 81       	ld	r24, Z
 786:	89 83       	std	Y+1, r24	; 0x01
 788:	0e 5f       	subi	r16, 0xFE	; 254
 78a:	1f 4f       	sbci	r17, 0xFF	; 255
 78c:	44 24       	eor	r4, r4
 78e:	43 94       	inc	r4
 790:	51 2c       	mov	r5, r1
 792:	54 01       	movw	r10, r8
 794:	15 c0       	rjmp	.+42     	; 0x7c0 <vfprintf+0x13c>
 796:	38 01       	movw	r6, r16
 798:	f2 e0       	ldi	r31, 0x02	; 2
 79a:	6f 0e       	add	r6, r31
 79c:	71 1c       	adc	r7, r1
 79e:	f8 01       	movw	r30, r16
 7a0:	a0 80       	ld	r10, Z
 7a2:	b1 80       	ldd	r11, Z+1	; 0x01
 7a4:	26 ff       	sbrs	r18, 6
 7a6:	03 c0       	rjmp	.+6      	; 0x7ae <vfprintf+0x12a>
 7a8:	65 2d       	mov	r22, r5
 7aa:	70 e0       	ldi	r23, 0x00	; 0
 7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <vfprintf+0x12e>
 7ae:	6f ef       	ldi	r22, 0xFF	; 255
 7b0:	7f ef       	ldi	r23, 0xFF	; 255
 7b2:	c5 01       	movw	r24, r10
 7b4:	2c 87       	std	Y+12, r18	; 0x0c
 7b6:	0e 94 1f 05 	call	0xa3e	; 0xa3e <strnlen>
 7ba:	2c 01       	movw	r4, r24
 7bc:	83 01       	movw	r16, r6
 7be:	2c 85       	ldd	r18, Y+12	; 0x0c
 7c0:	2f 77       	andi	r18, 0x7F	; 127
 7c2:	22 2e       	mov	r2, r18
 7c4:	17 c0       	rjmp	.+46     	; 0x7f4 <vfprintf+0x170>
 7c6:	38 01       	movw	r6, r16
 7c8:	f2 e0       	ldi	r31, 0x02	; 2
 7ca:	6f 0e       	add	r6, r31
 7cc:	71 1c       	adc	r7, r1
 7ce:	f8 01       	movw	r30, r16
 7d0:	a0 80       	ld	r10, Z
 7d2:	b1 80       	ldd	r11, Z+1	; 0x01
 7d4:	26 ff       	sbrs	r18, 6
 7d6:	03 c0       	rjmp	.+6      	; 0x7de <vfprintf+0x15a>
 7d8:	65 2d       	mov	r22, r5
 7da:	70 e0       	ldi	r23, 0x00	; 0
 7dc:	02 c0       	rjmp	.+4      	; 0x7e2 <vfprintf+0x15e>
 7de:	6f ef       	ldi	r22, 0xFF	; 255
 7e0:	7f ef       	ldi	r23, 0xFF	; 255
 7e2:	c5 01       	movw	r24, r10
 7e4:	2c 87       	std	Y+12, r18	; 0x0c
 7e6:	0e 94 14 05 	call	0xa28	; 0xa28 <strnlen_P>
 7ea:	2c 01       	movw	r4, r24
 7ec:	2c 85       	ldd	r18, Y+12	; 0x0c
 7ee:	20 68       	ori	r18, 0x80	; 128
 7f0:	22 2e       	mov	r2, r18
 7f2:	83 01       	movw	r16, r6
 7f4:	23 fc       	sbrc	r2, 3
 7f6:	1b c0       	rjmp	.+54     	; 0x82e <vfprintf+0x1aa>
 7f8:	83 2d       	mov	r24, r3
 7fa:	90 e0       	ldi	r25, 0x00	; 0
 7fc:	48 16       	cp	r4, r24
 7fe:	59 06       	cpc	r5, r25
 800:	b0 f4       	brcc	.+44     	; 0x82e <vfprintf+0x1aa>
 802:	b7 01       	movw	r22, r14
 804:	80 e2       	ldi	r24, 0x20	; 32
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 80c:	3a 94       	dec	r3
 80e:	f4 cf       	rjmp	.-24     	; 0x7f8 <vfprintf+0x174>
 810:	f5 01       	movw	r30, r10
 812:	27 fc       	sbrc	r2, 7
 814:	85 91       	lpm	r24, Z+
 816:	27 fe       	sbrs	r2, 7
 818:	81 91       	ld	r24, Z+
 81a:	5f 01       	movw	r10, r30
 81c:	b7 01       	movw	r22, r14
 81e:	90 e0       	ldi	r25, 0x00	; 0
 820:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 824:	31 10       	cpse	r3, r1
 826:	3a 94       	dec	r3
 828:	f1 e0       	ldi	r31, 0x01	; 1
 82a:	4f 1a       	sub	r4, r31
 82c:	51 08       	sbc	r5, r1
 82e:	41 14       	cp	r4, r1
 830:	51 04       	cpc	r5, r1
 832:	71 f7       	brne	.-36     	; 0x810 <vfprintf+0x18c>
 834:	e5 c0       	rjmp	.+458    	; 0xa00 <vfprintf+0x37c>
 836:	84 36       	cpi	r24, 0x64	; 100
 838:	11 f0       	breq	.+4      	; 0x83e <vfprintf+0x1ba>
 83a:	89 36       	cpi	r24, 0x69	; 105
 83c:	39 f5       	brne	.+78     	; 0x88c <vfprintf+0x208>
 83e:	f8 01       	movw	r30, r16
 840:	27 ff       	sbrs	r18, 7
 842:	07 c0       	rjmp	.+14     	; 0x852 <vfprintf+0x1ce>
 844:	60 81       	ld	r22, Z
 846:	71 81       	ldd	r23, Z+1	; 0x01
 848:	82 81       	ldd	r24, Z+2	; 0x02
 84a:	93 81       	ldd	r25, Z+3	; 0x03
 84c:	0c 5f       	subi	r16, 0xFC	; 252
 84e:	1f 4f       	sbci	r17, 0xFF	; 255
 850:	08 c0       	rjmp	.+16     	; 0x862 <vfprintf+0x1de>
 852:	60 81       	ld	r22, Z
 854:	71 81       	ldd	r23, Z+1	; 0x01
 856:	88 27       	eor	r24, r24
 858:	77 fd       	sbrc	r23, 7
 85a:	80 95       	com	r24
 85c:	98 2f       	mov	r25, r24
 85e:	0e 5f       	subi	r16, 0xFE	; 254
 860:	1f 4f       	sbci	r17, 0xFF	; 255
 862:	2f 76       	andi	r18, 0x6F	; 111
 864:	b2 2e       	mov	r11, r18
 866:	97 ff       	sbrs	r25, 7
 868:	09 c0       	rjmp	.+18     	; 0x87c <vfprintf+0x1f8>
 86a:	90 95       	com	r25
 86c:	80 95       	com	r24
 86e:	70 95       	com	r23
 870:	61 95       	neg	r22
 872:	7f 4f       	sbci	r23, 0xFF	; 255
 874:	8f 4f       	sbci	r24, 0xFF	; 255
 876:	9f 4f       	sbci	r25, 0xFF	; 255
 878:	20 68       	ori	r18, 0x80	; 128
 87a:	b2 2e       	mov	r11, r18
 87c:	2a e0       	ldi	r18, 0x0A	; 10
 87e:	30 e0       	ldi	r19, 0x00	; 0
 880:	a4 01       	movw	r20, r8
 882:	0e 94 5c 05 	call	0xab8	; 0xab8 <__ultoa_invert>
 886:	a8 2e       	mov	r10, r24
 888:	a8 18       	sub	r10, r8
 88a:	44 c0       	rjmp	.+136    	; 0x914 <vfprintf+0x290>
 88c:	85 37       	cpi	r24, 0x75	; 117
 88e:	29 f4       	brne	.+10     	; 0x89a <vfprintf+0x216>
 890:	2f 7e       	andi	r18, 0xEF	; 239
 892:	b2 2e       	mov	r11, r18
 894:	2a e0       	ldi	r18, 0x0A	; 10
 896:	30 e0       	ldi	r19, 0x00	; 0
 898:	25 c0       	rjmp	.+74     	; 0x8e4 <vfprintf+0x260>
 89a:	f2 2f       	mov	r31, r18
 89c:	f9 7f       	andi	r31, 0xF9	; 249
 89e:	bf 2e       	mov	r11, r31
 8a0:	8f 36       	cpi	r24, 0x6F	; 111
 8a2:	c1 f0       	breq	.+48     	; 0x8d4 <vfprintf+0x250>
 8a4:	18 f4       	brcc	.+6      	; 0x8ac <vfprintf+0x228>
 8a6:	88 35       	cpi	r24, 0x58	; 88
 8a8:	79 f0       	breq	.+30     	; 0x8c8 <vfprintf+0x244>
 8aa:	b4 c0       	rjmp	.+360    	; 0xa14 <vfprintf+0x390>
 8ac:	80 37       	cpi	r24, 0x70	; 112
 8ae:	19 f0       	breq	.+6      	; 0x8b6 <vfprintf+0x232>
 8b0:	88 37       	cpi	r24, 0x78	; 120
 8b2:	21 f0       	breq	.+8      	; 0x8bc <vfprintf+0x238>
 8b4:	af c0       	rjmp	.+350    	; 0xa14 <vfprintf+0x390>
 8b6:	2f 2f       	mov	r18, r31
 8b8:	20 61       	ori	r18, 0x10	; 16
 8ba:	b2 2e       	mov	r11, r18
 8bc:	b4 fe       	sbrs	r11, 4
 8be:	0d c0       	rjmp	.+26     	; 0x8da <vfprintf+0x256>
 8c0:	8b 2d       	mov	r24, r11
 8c2:	84 60       	ori	r24, 0x04	; 4
 8c4:	b8 2e       	mov	r11, r24
 8c6:	09 c0       	rjmp	.+18     	; 0x8da <vfprintf+0x256>
 8c8:	24 ff       	sbrs	r18, 4
 8ca:	0a c0       	rjmp	.+20     	; 0x8e0 <vfprintf+0x25c>
 8cc:	9f 2f       	mov	r25, r31
 8ce:	96 60       	ori	r25, 0x06	; 6
 8d0:	b9 2e       	mov	r11, r25
 8d2:	06 c0       	rjmp	.+12     	; 0x8e0 <vfprintf+0x25c>
 8d4:	28 e0       	ldi	r18, 0x08	; 8
 8d6:	30 e0       	ldi	r19, 0x00	; 0
 8d8:	05 c0       	rjmp	.+10     	; 0x8e4 <vfprintf+0x260>
 8da:	20 e1       	ldi	r18, 0x10	; 16
 8dc:	30 e0       	ldi	r19, 0x00	; 0
 8de:	02 c0       	rjmp	.+4      	; 0x8e4 <vfprintf+0x260>
 8e0:	20 e1       	ldi	r18, 0x10	; 16
 8e2:	32 e0       	ldi	r19, 0x02	; 2
 8e4:	f8 01       	movw	r30, r16
 8e6:	b7 fe       	sbrs	r11, 7
 8e8:	07 c0       	rjmp	.+14     	; 0x8f8 <vfprintf+0x274>
 8ea:	60 81       	ld	r22, Z
 8ec:	71 81       	ldd	r23, Z+1	; 0x01
 8ee:	82 81       	ldd	r24, Z+2	; 0x02
 8f0:	93 81       	ldd	r25, Z+3	; 0x03
 8f2:	0c 5f       	subi	r16, 0xFC	; 252
 8f4:	1f 4f       	sbci	r17, 0xFF	; 255
 8f6:	06 c0       	rjmp	.+12     	; 0x904 <vfprintf+0x280>
 8f8:	60 81       	ld	r22, Z
 8fa:	71 81       	ldd	r23, Z+1	; 0x01
 8fc:	80 e0       	ldi	r24, 0x00	; 0
 8fe:	90 e0       	ldi	r25, 0x00	; 0
 900:	0e 5f       	subi	r16, 0xFE	; 254
 902:	1f 4f       	sbci	r17, 0xFF	; 255
 904:	a4 01       	movw	r20, r8
 906:	0e 94 5c 05 	call	0xab8	; 0xab8 <__ultoa_invert>
 90a:	a8 2e       	mov	r10, r24
 90c:	a8 18       	sub	r10, r8
 90e:	fb 2d       	mov	r31, r11
 910:	ff 77       	andi	r31, 0x7F	; 127
 912:	bf 2e       	mov	r11, r31
 914:	b6 fe       	sbrs	r11, 6
 916:	0b c0       	rjmp	.+22     	; 0x92e <vfprintf+0x2aa>
 918:	2b 2d       	mov	r18, r11
 91a:	2e 7f       	andi	r18, 0xFE	; 254
 91c:	a5 14       	cp	r10, r5
 91e:	50 f4       	brcc	.+20     	; 0x934 <vfprintf+0x2b0>
 920:	b4 fe       	sbrs	r11, 4
 922:	0a c0       	rjmp	.+20     	; 0x938 <vfprintf+0x2b4>
 924:	b2 fc       	sbrc	r11, 2
 926:	08 c0       	rjmp	.+16     	; 0x938 <vfprintf+0x2b4>
 928:	2b 2d       	mov	r18, r11
 92a:	2e 7e       	andi	r18, 0xEE	; 238
 92c:	05 c0       	rjmp	.+10     	; 0x938 <vfprintf+0x2b4>
 92e:	7a 2c       	mov	r7, r10
 930:	2b 2d       	mov	r18, r11
 932:	03 c0       	rjmp	.+6      	; 0x93a <vfprintf+0x2b6>
 934:	7a 2c       	mov	r7, r10
 936:	01 c0       	rjmp	.+2      	; 0x93a <vfprintf+0x2b6>
 938:	75 2c       	mov	r7, r5
 93a:	24 ff       	sbrs	r18, 4
 93c:	0d c0       	rjmp	.+26     	; 0x958 <vfprintf+0x2d4>
 93e:	fe 01       	movw	r30, r28
 940:	ea 0d       	add	r30, r10
 942:	f1 1d       	adc	r31, r1
 944:	80 81       	ld	r24, Z
 946:	80 33       	cpi	r24, 0x30	; 48
 948:	11 f4       	brne	.+4      	; 0x94e <vfprintf+0x2ca>
 94a:	29 7e       	andi	r18, 0xE9	; 233
 94c:	09 c0       	rjmp	.+18     	; 0x960 <vfprintf+0x2dc>
 94e:	22 ff       	sbrs	r18, 2
 950:	06 c0       	rjmp	.+12     	; 0x95e <vfprintf+0x2da>
 952:	73 94       	inc	r7
 954:	73 94       	inc	r7
 956:	04 c0       	rjmp	.+8      	; 0x960 <vfprintf+0x2dc>
 958:	82 2f       	mov	r24, r18
 95a:	86 78       	andi	r24, 0x86	; 134
 95c:	09 f0       	breq	.+2      	; 0x960 <vfprintf+0x2dc>
 95e:	73 94       	inc	r7
 960:	23 fd       	sbrc	r18, 3
 962:	13 c0       	rjmp	.+38     	; 0x98a <vfprintf+0x306>
 964:	20 ff       	sbrs	r18, 0
 966:	06 c0       	rjmp	.+12     	; 0x974 <vfprintf+0x2f0>
 968:	5a 2c       	mov	r5, r10
 96a:	73 14       	cp	r7, r3
 96c:	18 f4       	brcc	.+6      	; 0x974 <vfprintf+0x2f0>
 96e:	53 0c       	add	r5, r3
 970:	57 18       	sub	r5, r7
 972:	73 2c       	mov	r7, r3
 974:	73 14       	cp	r7, r3
 976:	68 f4       	brcc	.+26     	; 0x992 <vfprintf+0x30e>
 978:	b7 01       	movw	r22, r14
 97a:	80 e2       	ldi	r24, 0x20	; 32
 97c:	90 e0       	ldi	r25, 0x00	; 0
 97e:	2c 87       	std	Y+12, r18	; 0x0c
 980:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 984:	73 94       	inc	r7
 986:	2c 85       	ldd	r18, Y+12	; 0x0c
 988:	f5 cf       	rjmp	.-22     	; 0x974 <vfprintf+0x2f0>
 98a:	73 14       	cp	r7, r3
 98c:	10 f4       	brcc	.+4      	; 0x992 <vfprintf+0x30e>
 98e:	37 18       	sub	r3, r7
 990:	01 c0       	rjmp	.+2      	; 0x994 <vfprintf+0x310>
 992:	31 2c       	mov	r3, r1
 994:	24 ff       	sbrs	r18, 4
 996:	12 c0       	rjmp	.+36     	; 0x9bc <vfprintf+0x338>
 998:	b7 01       	movw	r22, r14
 99a:	80 e3       	ldi	r24, 0x30	; 48
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	2c 87       	std	Y+12, r18	; 0x0c
 9a0:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 9a4:	2c 85       	ldd	r18, Y+12	; 0x0c
 9a6:	22 ff       	sbrs	r18, 2
 9a8:	17 c0       	rjmp	.+46     	; 0x9d8 <vfprintf+0x354>
 9aa:	21 ff       	sbrs	r18, 1
 9ac:	03 c0       	rjmp	.+6      	; 0x9b4 <vfprintf+0x330>
 9ae:	88 e5       	ldi	r24, 0x58	; 88
 9b0:	90 e0       	ldi	r25, 0x00	; 0
 9b2:	02 c0       	rjmp	.+4      	; 0x9b8 <vfprintf+0x334>
 9b4:	88 e7       	ldi	r24, 0x78	; 120
 9b6:	90 e0       	ldi	r25, 0x00	; 0
 9b8:	b7 01       	movw	r22, r14
 9ba:	0c c0       	rjmp	.+24     	; 0x9d4 <vfprintf+0x350>
 9bc:	82 2f       	mov	r24, r18
 9be:	86 78       	andi	r24, 0x86	; 134
 9c0:	59 f0       	breq	.+22     	; 0x9d8 <vfprintf+0x354>
 9c2:	21 fd       	sbrc	r18, 1
 9c4:	02 c0       	rjmp	.+4      	; 0x9ca <vfprintf+0x346>
 9c6:	80 e2       	ldi	r24, 0x20	; 32
 9c8:	01 c0       	rjmp	.+2      	; 0x9cc <vfprintf+0x348>
 9ca:	8b e2       	ldi	r24, 0x2B	; 43
 9cc:	27 fd       	sbrc	r18, 7
 9ce:	8d e2       	ldi	r24, 0x2D	; 45
 9d0:	b7 01       	movw	r22, r14
 9d2:	90 e0       	ldi	r25, 0x00	; 0
 9d4:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 9d8:	a5 14       	cp	r10, r5
 9da:	38 f4       	brcc	.+14     	; 0x9ea <vfprintf+0x366>
 9dc:	b7 01       	movw	r22, r14
 9de:	80 e3       	ldi	r24, 0x30	; 48
 9e0:	90 e0       	ldi	r25, 0x00	; 0
 9e2:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 9e6:	5a 94       	dec	r5
 9e8:	f7 cf       	rjmp	.-18     	; 0x9d8 <vfprintf+0x354>
 9ea:	aa 94       	dec	r10
 9ec:	f4 01       	movw	r30, r8
 9ee:	ea 0d       	add	r30, r10
 9f0:	f1 1d       	adc	r31, r1
 9f2:	80 81       	ld	r24, Z
 9f4:	b7 01       	movw	r22, r14
 9f6:	90 e0       	ldi	r25, 0x00	; 0
 9f8:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 9fc:	a1 10       	cpse	r10, r1
 9fe:	f5 cf       	rjmp	.-22     	; 0x9ea <vfprintf+0x366>
 a00:	33 20       	and	r3, r3
 a02:	09 f4       	brne	.+2      	; 0xa06 <vfprintf+0x382>
 a04:	51 ce       	rjmp	.-862    	; 0x6a8 <vfprintf+0x24>
 a06:	b7 01       	movw	r22, r14
 a08:	80 e2       	ldi	r24, 0x20	; 32
 a0a:	90 e0       	ldi	r25, 0x00	; 0
 a0c:	0e 94 2a 05 	call	0xa54	; 0xa54 <fputc>
 a10:	3a 94       	dec	r3
 a12:	f6 cf       	rjmp	.-20     	; 0xa00 <vfprintf+0x37c>
 a14:	f7 01       	movw	r30, r14
 a16:	86 81       	ldd	r24, Z+6	; 0x06
 a18:	97 81       	ldd	r25, Z+7	; 0x07
 a1a:	02 c0       	rjmp	.+4      	; 0xa20 <vfprintf+0x39c>
 a1c:	8f ef       	ldi	r24, 0xFF	; 255
 a1e:	9f ef       	ldi	r25, 0xFF	; 255
 a20:	2c 96       	adiw	r28, 0x0c	; 12
 a22:	e2 e1       	ldi	r30, 0x12	; 18
 a24:	0c 94 d6 05 	jmp	0xbac	; 0xbac <__epilogue_restores__>

00000a28 <strnlen_P>:
 a28:	fc 01       	movw	r30, r24
 a2a:	05 90       	lpm	r0, Z+
 a2c:	61 50       	subi	r22, 0x01	; 1
 a2e:	70 40       	sbci	r23, 0x00	; 0
 a30:	01 10       	cpse	r0, r1
 a32:	d8 f7       	brcc	.-10     	; 0xa2a <strnlen_P+0x2>
 a34:	80 95       	com	r24
 a36:	90 95       	com	r25
 a38:	8e 0f       	add	r24, r30
 a3a:	9f 1f       	adc	r25, r31
 a3c:	08 95       	ret

00000a3e <strnlen>:
 a3e:	fc 01       	movw	r30, r24
 a40:	61 50       	subi	r22, 0x01	; 1
 a42:	70 40       	sbci	r23, 0x00	; 0
 a44:	01 90       	ld	r0, Z+
 a46:	01 10       	cpse	r0, r1
 a48:	d8 f7       	brcc	.-10     	; 0xa40 <strnlen+0x2>
 a4a:	80 95       	com	r24
 a4c:	90 95       	com	r25
 a4e:	8e 0f       	add	r24, r30
 a50:	9f 1f       	adc	r25, r31
 a52:	08 95       	ret

00000a54 <fputc>:
 a54:	0f 93       	push	r16
 a56:	1f 93       	push	r17
 a58:	cf 93       	push	r28
 a5a:	df 93       	push	r29
 a5c:	18 2f       	mov	r17, r24
 a5e:	09 2f       	mov	r16, r25
 a60:	eb 01       	movw	r28, r22
 a62:	8b 81       	ldd	r24, Y+3	; 0x03
 a64:	81 fd       	sbrc	r24, 1
 a66:	03 c0       	rjmp	.+6      	; 0xa6e <fputc+0x1a>
 a68:	8f ef       	ldi	r24, 0xFF	; 255
 a6a:	9f ef       	ldi	r25, 0xFF	; 255
 a6c:	20 c0       	rjmp	.+64     	; 0xaae <fputc+0x5a>
 a6e:	82 ff       	sbrs	r24, 2
 a70:	10 c0       	rjmp	.+32     	; 0xa92 <fputc+0x3e>
 a72:	4e 81       	ldd	r20, Y+6	; 0x06
 a74:	5f 81       	ldd	r21, Y+7	; 0x07
 a76:	2c 81       	ldd	r18, Y+4	; 0x04
 a78:	3d 81       	ldd	r19, Y+5	; 0x05
 a7a:	42 17       	cp	r20, r18
 a7c:	53 07       	cpc	r21, r19
 a7e:	7c f4       	brge	.+30     	; 0xa9e <fputc+0x4a>
 a80:	e8 81       	ld	r30, Y
 a82:	f9 81       	ldd	r31, Y+1	; 0x01
 a84:	9f 01       	movw	r18, r30
 a86:	2f 5f       	subi	r18, 0xFF	; 255
 a88:	3f 4f       	sbci	r19, 0xFF	; 255
 a8a:	39 83       	std	Y+1, r19	; 0x01
 a8c:	28 83       	st	Y, r18
 a8e:	10 83       	st	Z, r17
 a90:	06 c0       	rjmp	.+12     	; 0xa9e <fputc+0x4a>
 a92:	e8 85       	ldd	r30, Y+8	; 0x08
 a94:	f9 85       	ldd	r31, Y+9	; 0x09
 a96:	81 2f       	mov	r24, r17
 a98:	09 95       	icall
 a9a:	89 2b       	or	r24, r25
 a9c:	29 f7       	brne	.-54     	; 0xa68 <fputc+0x14>
 a9e:	2e 81       	ldd	r18, Y+6	; 0x06
 aa0:	3f 81       	ldd	r19, Y+7	; 0x07
 aa2:	2f 5f       	subi	r18, 0xFF	; 255
 aa4:	3f 4f       	sbci	r19, 0xFF	; 255
 aa6:	3f 83       	std	Y+7, r19	; 0x07
 aa8:	2e 83       	std	Y+6, r18	; 0x06
 aaa:	81 2f       	mov	r24, r17
 aac:	90 2f       	mov	r25, r16
 aae:	df 91       	pop	r29
 ab0:	cf 91       	pop	r28
 ab2:	1f 91       	pop	r17
 ab4:	0f 91       	pop	r16
 ab6:	08 95       	ret

00000ab8 <__ultoa_invert>:
 ab8:	fa 01       	movw	r30, r20
 aba:	aa 27       	eor	r26, r26
 abc:	28 30       	cpi	r18, 0x08	; 8
 abe:	51 f1       	breq	.+84     	; 0xb14 <__ultoa_invert+0x5c>
 ac0:	20 31       	cpi	r18, 0x10	; 16
 ac2:	81 f1       	breq	.+96     	; 0xb24 <__ultoa_invert+0x6c>
 ac4:	e8 94       	clt
 ac6:	6f 93       	push	r22
 ac8:	6e 7f       	andi	r22, 0xFE	; 254
 aca:	6e 5f       	subi	r22, 0xFE	; 254
 acc:	7f 4f       	sbci	r23, 0xFF	; 255
 ace:	8f 4f       	sbci	r24, 0xFF	; 255
 ad0:	9f 4f       	sbci	r25, 0xFF	; 255
 ad2:	af 4f       	sbci	r26, 0xFF	; 255
 ad4:	b1 e0       	ldi	r27, 0x01	; 1
 ad6:	3e d0       	rcall	.+124    	; 0xb54 <__ultoa_invert+0x9c>
 ad8:	b4 e0       	ldi	r27, 0x04	; 4
 ada:	3c d0       	rcall	.+120    	; 0xb54 <__ultoa_invert+0x9c>
 adc:	67 0f       	add	r22, r23
 ade:	78 1f       	adc	r23, r24
 ae0:	89 1f       	adc	r24, r25
 ae2:	9a 1f       	adc	r25, r26
 ae4:	a1 1d       	adc	r26, r1
 ae6:	68 0f       	add	r22, r24
 ae8:	79 1f       	adc	r23, r25
 aea:	8a 1f       	adc	r24, r26
 aec:	91 1d       	adc	r25, r1
 aee:	a1 1d       	adc	r26, r1
 af0:	6a 0f       	add	r22, r26
 af2:	71 1d       	adc	r23, r1
 af4:	81 1d       	adc	r24, r1
 af6:	91 1d       	adc	r25, r1
 af8:	a1 1d       	adc	r26, r1
 afa:	20 d0       	rcall	.+64     	; 0xb3c <__ultoa_invert+0x84>
 afc:	09 f4       	brne	.+2      	; 0xb00 <__ultoa_invert+0x48>
 afe:	68 94       	set
 b00:	3f 91       	pop	r19
 b02:	2a e0       	ldi	r18, 0x0A	; 10
 b04:	26 9f       	mul	r18, r22
 b06:	11 24       	eor	r1, r1
 b08:	30 19       	sub	r19, r0
 b0a:	30 5d       	subi	r19, 0xD0	; 208
 b0c:	31 93       	st	Z+, r19
 b0e:	de f6       	brtc	.-74     	; 0xac6 <__ultoa_invert+0xe>
 b10:	cf 01       	movw	r24, r30
 b12:	08 95       	ret
 b14:	46 2f       	mov	r20, r22
 b16:	47 70       	andi	r20, 0x07	; 7
 b18:	40 5d       	subi	r20, 0xD0	; 208
 b1a:	41 93       	st	Z+, r20
 b1c:	b3 e0       	ldi	r27, 0x03	; 3
 b1e:	0f d0       	rcall	.+30     	; 0xb3e <__ultoa_invert+0x86>
 b20:	c9 f7       	brne	.-14     	; 0xb14 <__ultoa_invert+0x5c>
 b22:	f6 cf       	rjmp	.-20     	; 0xb10 <__ultoa_invert+0x58>
 b24:	46 2f       	mov	r20, r22
 b26:	4f 70       	andi	r20, 0x0F	; 15
 b28:	40 5d       	subi	r20, 0xD0	; 208
 b2a:	4a 33       	cpi	r20, 0x3A	; 58
 b2c:	18 f0       	brcs	.+6      	; 0xb34 <__ultoa_invert+0x7c>
 b2e:	49 5d       	subi	r20, 0xD9	; 217
 b30:	31 fd       	sbrc	r19, 1
 b32:	40 52       	subi	r20, 0x20	; 32
 b34:	41 93       	st	Z+, r20
 b36:	02 d0       	rcall	.+4      	; 0xb3c <__ultoa_invert+0x84>
 b38:	a9 f7       	brne	.-22     	; 0xb24 <__ultoa_invert+0x6c>
 b3a:	ea cf       	rjmp	.-44     	; 0xb10 <__ultoa_invert+0x58>
 b3c:	b4 e0       	ldi	r27, 0x04	; 4
 b3e:	a6 95       	lsr	r26
 b40:	97 95       	ror	r25
 b42:	87 95       	ror	r24
 b44:	77 95       	ror	r23
 b46:	67 95       	ror	r22
 b48:	ba 95       	dec	r27
 b4a:	c9 f7       	brne	.-14     	; 0xb3e <__ultoa_invert+0x86>
 b4c:	00 97       	sbiw	r24, 0x00	; 0
 b4e:	61 05       	cpc	r22, r1
 b50:	71 05       	cpc	r23, r1
 b52:	08 95       	ret
 b54:	9b 01       	movw	r18, r22
 b56:	ac 01       	movw	r20, r24
 b58:	0a 2e       	mov	r0, r26
 b5a:	06 94       	lsr	r0
 b5c:	57 95       	ror	r21
 b5e:	47 95       	ror	r20
 b60:	37 95       	ror	r19
 b62:	27 95       	ror	r18
 b64:	ba 95       	dec	r27
 b66:	c9 f7       	brne	.-14     	; 0xb5a <__ultoa_invert+0xa2>
 b68:	62 0f       	add	r22, r18
 b6a:	73 1f       	adc	r23, r19
 b6c:	84 1f       	adc	r24, r20
 b6e:	95 1f       	adc	r25, r21
 b70:	a0 1d       	adc	r26, r0
 b72:	08 95       	ret

00000b74 <__prologue_saves__>:
 b74:	2f 92       	push	r2
 b76:	3f 92       	push	r3
 b78:	4f 92       	push	r4
 b7a:	5f 92       	push	r5
 b7c:	6f 92       	push	r6
 b7e:	7f 92       	push	r7
 b80:	8f 92       	push	r8
 b82:	9f 92       	push	r9
 b84:	af 92       	push	r10
 b86:	bf 92       	push	r11
 b88:	cf 92       	push	r12
 b8a:	df 92       	push	r13
 b8c:	ef 92       	push	r14
 b8e:	ff 92       	push	r15
 b90:	0f 93       	push	r16
 b92:	1f 93       	push	r17
 b94:	cf 93       	push	r28
 b96:	df 93       	push	r29
 b98:	cd b7       	in	r28, 0x3d	; 61
 b9a:	de b7       	in	r29, 0x3e	; 62
 b9c:	ca 1b       	sub	r28, r26
 b9e:	db 0b       	sbc	r29, r27
 ba0:	0f b6       	in	r0, 0x3f	; 63
 ba2:	f8 94       	cli
 ba4:	de bf       	out	0x3e, r29	; 62
 ba6:	0f be       	out	0x3f, r0	; 63
 ba8:	cd bf       	out	0x3d, r28	; 61
 baa:	09 94       	ijmp

00000bac <__epilogue_restores__>:
 bac:	2a 88       	ldd	r2, Y+18	; 0x12
 bae:	39 88       	ldd	r3, Y+17	; 0x11
 bb0:	48 88       	ldd	r4, Y+16	; 0x10
 bb2:	5f 84       	ldd	r5, Y+15	; 0x0f
 bb4:	6e 84       	ldd	r6, Y+14	; 0x0e
 bb6:	7d 84       	ldd	r7, Y+13	; 0x0d
 bb8:	8c 84       	ldd	r8, Y+12	; 0x0c
 bba:	9b 84       	ldd	r9, Y+11	; 0x0b
 bbc:	aa 84       	ldd	r10, Y+10	; 0x0a
 bbe:	b9 84       	ldd	r11, Y+9	; 0x09
 bc0:	c8 84       	ldd	r12, Y+8	; 0x08
 bc2:	df 80       	ldd	r13, Y+7	; 0x07
 bc4:	ee 80       	ldd	r14, Y+6	; 0x06
 bc6:	fd 80       	ldd	r15, Y+5	; 0x05
 bc8:	0c 81       	ldd	r16, Y+4	; 0x04
 bca:	1b 81       	ldd	r17, Y+3	; 0x03
 bcc:	aa 81       	ldd	r26, Y+2	; 0x02
 bce:	b9 81       	ldd	r27, Y+1	; 0x01
 bd0:	ce 0f       	add	r28, r30
 bd2:	d1 1d       	adc	r29, r1
 bd4:	0f b6       	in	r0, 0x3f	; 63
 bd6:	f8 94       	cli
 bd8:	de bf       	out	0x3e, r29	; 62
 bda:	0f be       	out	0x3f, r0	; 63
 bdc:	cd bf       	out	0x3d, r28	; 61
 bde:	ed 01       	movw	r28, r26
 be0:	08 95       	ret

00000be2 <_exit>:
 be2:	f8 94       	cli

00000be4 <__stop_program>:
 be4:	ff cf       	rjmp	.-2      	; 0xbe4 <__stop_program>
